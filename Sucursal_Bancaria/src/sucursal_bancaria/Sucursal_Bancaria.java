/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sucursal_bancaria;

import com.itextpdf.text.Document;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Image;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.Scanner;
import javax.swing.DefaultComboBoxModel;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.net.*;
import java.io.*;
import javax.swing.JFileChooser;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.data.category.DefaultCategoryDataset;


/**
 *
 * @author Josue Rodriguez
 */
public class Sucursal_Bancaria extends javax.swing.JFrame {

    /**
     * Creates new form Sucursal_Bancaria
     */
    public Sucursal_Bancaria() {
        initComponents();
        this.setLocationRelativeTo(null);
        ImageIcon fot = new ImageIcon("./sota atlantida logo.jpg");
        Icon icono = new ImageIcon(fot.getImage().getScaledInstance(logo_portada.getWidth(), logo_portada.getHeight(), Image.SCALE_DEFAULT));
        logo_portada.setIcon(icono);
        Fecha_Hora fh = new Fecha_Hora(dia, hora);
        Thread proceso1 = new Thread(fh);
        proceso1.start();
        eca.setValue(2017);
        try {
            cargarClientes();
            System.out.println("CARGADO INICIAL EXITOSO");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        master_admin = new javax.swing.JDialog();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        cod_cliente = new javax.swing.JTextField();
        nombre_cliente = new javax.swing.JTextField();
        id_cliente = new javax.swing.JTextField();
        fijo_cliente = new javax.swing.JTextField();
        celular_cliente = new javax.swing.JTextField();
        trabajo_cliente = new javax.swing.JTextField();
        direccion_cliente = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        user_cliente = new javax.swing.JTextField();
        contra_cliente = new javax.swing.JPasswordField();
        cc_cliente = new javax.swing.JPasswordField();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabla_cuentasclientes = new javax.swing.JTable();
        cb_cuentas_clientes = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        tf_cc1 = new javax.swing.JTextField();
        bt_agregarcuenta = new javax.swing.JButton();
        reti = new javax.swing.JButton();
        depo = new javax.swing.JButton();
        bt_eliminarcuenta = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tabla_tarjetas = new javax.swing.JTable();
        cb_cuentas_clientes1 = new javax.swing.JComboBox<>();
        jLabel37 = new javax.swing.JLabel();
        tf_cc2 = new javax.swing.JTextField();
        bt_agregarcuenta2 = new javax.swing.JButton();
        bt_eliminarcuenta2 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tabla_tipotarjeta = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        tabla_beneficios = new javax.swing.JTable();
        bt_agregarcuenta1 = new javax.swing.JButton();
        bt_eliminarcuenta1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla_clientes = new javax.swing.JTable();
        jButton6 = new javax.swing.JButton();
        jButton30 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablagralcuentas = new javax.swing.JTable();
        jPanel23 = new javax.swing.JPanel();
        jPanel20 = new javax.swing.JPanel();
        jLabel60 = new javax.swing.JLabel();
        nombre12 = new javax.swing.JTextField();
        jLabel61 = new javax.swing.JLabel();
        rtn2 = new javax.swing.JTextField();
        jButton14 = new javax.swing.JButton();
        jPanel21 = new javax.swing.JPanel();
        nombreproducto = new javax.swing.JTextField();
        jLabel62 = new javax.swing.JLabel();
        descripcionproducto = new javax.swing.JTextField();
        jLabel63 = new javax.swing.JLabel();
        jLabel64 = new javax.swing.JLabel();
        precioproducto = new javax.swing.JTextField();
        jButton15 = new javax.swing.JButton();
        jLabel65 = new javax.swing.JLabel();
        distruibuidor = new javax.swing.JComboBox<>();
        jPanel24 = new javax.swing.JPanel();
        ec1 = new javax.swing.JComboBox<>();
        tj1 = new javax.swing.JComboBox<>();
        jLabel74 = new javax.swing.JLabel();
        jLabel75 = new javax.swing.JLabel();
        jLabel76 = new javax.swing.JLabel();
        jLabel77 = new javax.swing.JLabel();
        jLabel78 = new javax.swing.JLabel();
        jLabel80 = new javax.swing.JLabel();
        jLabel81 = new javax.swing.JLabel();
        notj = new javax.swing.JTextField();
        ecd = new javax.swing.JTextField();
        ecc = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jButton25 = new javax.swing.JButton();
        jLabel79 = new javax.swing.JLabel();
        ecm = new javax.swing.JComboBox<>();
        eca = new javax.swing.JSpinner();
        jPanel8 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        nueva_cuenta = new javax.swing.JDialog();
        jPanel4 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        num_cuentabancaria = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        descripcion_cuentabancaria = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        depositoinicial_cuentabancaria = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        nuevo_tipo = new javax.swing.JDialog();
        jPanel10 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        codigo_tipotarjeta = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        descripcion_tipotarjeta = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        limite_tipotarjeta = new javax.swing.JTextField();
        jLabel36 = new javax.swing.JLabel();
        contador_beneficiostarjeta = new javax.swing.JTextField();
        jButton9 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        nueva_tarjeta = new javax.swing.JDialog();
        jPanel14 = new javax.swing.JPanel();
        jLabel39 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        no_tarjeta = new javax.swing.JTextField();
        jLabel40 = new javax.swing.JLabel();
        descripcion_tarjeta = new javax.swing.JTextField();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        saldo_tarjeta = new javax.swing.JTextField();
        limite_tarjeta = new javax.swing.JTextField();
        codseguridad_tarjeta = new javax.swing.JTextField();
        jLabel44 = new javax.swing.JLabel();
        tasa_tarjeta = new javax.swing.JTextField();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        cb_tt = new javax.swing.JComboBox<>();
        jScrollPane7 = new javax.swing.JScrollPane();
        tabla_tt2 = new javax.swing.JTable();
        jButton10 = new javax.swing.JButton();
        fechacorte = new com.toedter.calendar.JDateChooser();
        master_client = new javax.swing.JDialog();
        jPanel15 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        nombre1 = new javax.swing.JLabel();
        jButton11 = new javax.swing.JButton();
        dia = new javax.swing.JLabel();
        hora = new javax.swing.JLabel();
        jButton17 = new javax.swing.JButton();
        jButton18 = new javax.swing.JButton();
        jButton19 = new javax.swing.JButton();
        jButton20 = new javax.swing.JButton();
        jButton21 = new javax.swing.JButton();
        jButton28 = new javax.swing.JButton();
        panelprincipal = new javax.swing.JPanel();
        hacerdeposito = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        jLabel56 = new javax.swing.JLabel();
        cb3 = new javax.swing.JComboBox<>();
        sa3 = new javax.swing.JTextField();
        jLabel54 = new javax.swing.JLabel();
        jLabel55 = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        jButton13 = new javax.swing.JButton();
        dp2 = new javax.swing.JTextField();
        dc3 = new javax.swing.JTextField();
        jLabel57 = new javax.swing.JLabel();
        destinatario = new javax.swing.JTextField();
        jPanel17 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        cb1 = new javax.swing.JComboBox<>();
        cb2 = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        dc1 = new javax.swing.JTextField();
        sa1 = new javax.swing.JTextField();
        dc2 = new javax.swing.JTextField();
        sa2 = new javax.swing.JTextField();
        dp1 = new javax.swing.JTextField();
        jButton12 = new javax.swing.JButton();
        hacercompra = new javax.swing.JPanel();
        jLabel66 = new javax.swing.JLabel();
        jButton16 = new javax.swing.JButton();
        jPanel22 = new javax.swing.JPanel();
        jButton22 = new javax.swing.JButton();
        jLabel70 = new javax.swing.JLabel();
        tp = new javax.swing.JTextField();
        jLabel71 = new javax.swing.JLabel();
        jScrollPane10 = new javax.swing.JScrollPane();
        descripcioncompra = new javax.swing.JTextArea();
        cbtj = new javax.swing.JComboBox<>();
        jLabel72 = new javax.swing.JLabel();
        jLabel73 = new javax.swing.JLabel();
        sds = new javax.swing.JTextField();
        jButton23 = new javax.swing.JButton();
        jButton24 = new javax.swing.JButton();
        jLabel67 = new javax.swing.JLabel();
        jLabel68 = new javax.swing.JLabel();
        jLabel69 = new javax.swing.JLabel();
        pagartarjeta = new javax.swing.JPanel();
        jLabel83 = new javax.swing.JLabel();
        jLabel85 = new javax.swing.JLabel();
        pminimo = new javax.swing.JTextField();
        pcontado = new javax.swing.JTextField();
        jButton29 = new javax.swing.JButton();
        jButton32 = new javax.swing.JButton();
        jPanel27 = new javax.swing.JPanel();
        cbtj98 = new javax.swing.JComboBox<>();
        jPanel28 = new javax.swing.JPanel();
        cbcnts = new javax.swing.JComboBox<>();
        jLabel87 = new javax.swing.JLabel();
        xyz = new javax.swing.JTextField();
        estados = new javax.swing.JPanel();
        jPanel25 = new javax.swing.JPanel();
        tj2 = new javax.swing.JComboBox<>();
        jLabel82 = new javax.swing.JLabel();
        jButton26 = new javax.swing.JButton();
        jPanel26 = new javax.swing.JPanel();
        jScrollPane12 = new javax.swing.JScrollPane();
        tablaestados = new javax.swing.JTable();
        jScrollPane11 = new javax.swing.JScrollPane();
        tabladetalles = new javax.swing.JTable();
        jLabel84 = new javax.swing.JLabel();
        mnths = new javax.swing.JComboBox<>();
        jButton27 = new javax.swing.JButton();
        home = new javax.swing.JPanel();
        homecoming = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        consultas = new javax.swing.JPanel();
        jPanel18 = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        saldocb = new javax.swing.JTable();
        jPanel19 = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        saldotj = new javax.swing.JTable();
        Reporte = new javax.swing.JDialog();
        jLabel86 = new javax.swing.JLabel();
        jPanel29 = new javax.swing.JPanel();
        jScrollPane13 = new javax.swing.JScrollPane();
        dcliente = new javax.swing.JTable();
        jScrollPane14 = new javax.swing.JScrollPane();
        ccliente = new javax.swing.JTable();
        jLabel88 = new javax.swing.JLabel();
        t11 = new javax.swing.JTextField();
        jLabel89 = new javax.swing.JLabel();
        jScrollPane15 = new javax.swing.JScrollPane();
        tablatj123 = new javax.swing.JTable();
        t12 = new javax.swing.JTextField();
        jScrollPane16 = new javax.swing.JScrollPane();
        tablacompras = new javax.swing.JTable();
        t13 = new javax.swing.JTextField();
        jLabel90 = new javax.swing.JLabel();
        jButton31 = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jLabel47 = new javax.swing.JLabel();
        tf_user2 = new javax.swing.JTextField();
        jLabel48 = new javax.swing.JLabel();
        pf_pass2 = new javax.swing.JPasswordField();
        jPanel11 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        logo_portada = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jPanel13 = new javax.swing.JPanel();
        jLabel58 = new javax.swing.JLabel();
        jLabel59 = new javax.swing.JLabel();

        master_admin.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        master_admin.setTitle("Ventana Administrador");
        master_admin.setBackground(new java.awt.Color(255, 0, 0));
        master_admin.setResizable(false);

        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane1StateChanged(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(null);

        jLabel10.setFont(new java.awt.Font("Tw Cen MT", 1, 16)); // NOI18N
        jLabel10.setText("Nombre:");
        jPanel1.add(jLabel10);
        jLabel10.setBounds(10, 76, 59, 18);

        jLabel11.setFont(new java.awt.Font("Tw Cen MT", 1, 16)); // NOI18N
        jLabel11.setText("Codigo del Cliente:");
        jPanel1.add(jLabel11);
        jLabel11.setBounds(10, 28, 127, 18);

        jLabel13.setFont(new java.awt.Font("Tw Cen MT", 1, 16)); // NOI18N
        jLabel13.setText("No. Identidad:");
        jPanel1.add(jLabel13);
        jLabel13.setBounds(10, 123, 96, 18);

        jLabel14.setFont(new java.awt.Font("Tw Cen MT", 1, 16)); // NOI18N
        jLabel14.setText("Telefono fijo:");
        jPanel1.add(jLabel14);
        jLabel14.setBounds(10, 170, 90, 18);

        jLabel15.setFont(new java.awt.Font("Tw Cen MT", 1, 16)); // NOI18N
        jLabel15.setText("Telefono celular:");
        jPanel1.add(jLabel15);
        jLabel15.setBounds(10, 225, 112, 18);

        jLabel17.setFont(new java.awt.Font("Tw Cen MT", 1, 16)); // NOI18N
        jLabel17.setText("Trabajo:");
        jPanel1.add(jLabel17);
        jLabel17.setBounds(10, 281, 55, 18);

        jLabel18.setFont(new java.awt.Font("Tw Cen MT", 1, 16)); // NOI18N
        jLabel18.setText("Direccion:");
        jPanel1.add(jLabel18);
        jLabel18.setBounds(10, 331, 65, 18);

        cod_cliente.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, true));
        jPanel1.add(cod_cliente);
        cod_cliente.setBounds(155, 28, 149, 20);

        nombre_cliente.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, true));
        jPanel1.add(nombre_cliente);
        nombre_cliente.setBounds(155, 76, 149, 20);

        id_cliente.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, true));
        jPanel1.add(id_cliente);
        id_cliente.setBounds(155, 122, 149, 20);

        fijo_cliente.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, true));
        jPanel1.add(fijo_cliente);
        fijo_cliente.setBounds(155, 170, 149, 20);

        celular_cliente.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, true));
        jPanel1.add(celular_cliente);
        celular_cliente.setBounds(155, 225, 149, 20);

        trabajo_cliente.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, true));
        jPanel1.add(trabajo_cliente);
        trabajo_cliente.setBounds(155, 277, 149, 20);

        direccion_cliente.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, true));
        jPanel1.add(direccion_cliente);
        direccion_cliente.setBounds(155, 327, 149, 20);

        jLabel19.setFont(new java.awt.Font("Tw Cen MT", 1, 16)); // NOI18N
        jLabel19.setText("Username:");
        jPanel1.add(jLabel19);
        jLabel19.setBounds(344, 28, 72, 18);

        jLabel20.setFont(new java.awt.Font("Tw Cen MT", 1, 16)); // NOI18N
        jLabel20.setText("Contraseña:");
        jPanel1.add(jLabel20);
        jLabel20.setBounds(344, 76, 80, 18);

        jLabel21.setFont(new java.awt.Font("Tw Cen MT", 1, 16)); // NOI18N
        jLabel21.setText("Confirmar Contraseña:");
        jPanel1.add(jLabel21);
        jLabel21.setBounds(344, 123, 151, 18);

        user_cliente.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, true));
        jPanel1.add(user_cliente);
        user_cliente.setBounds(434, 28, 149, 20);

        contra_cliente.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, true));
        jPanel1.add(contra_cliente);
        contra_cliente.setBounds(434, 72, 149, 20);

        cc_cliente.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, true));
        jPanel1.add(cc_cliente);
        cc_cliente.setBounds(505, 119, 149, 20);

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 0, 0));
        jLabel22.setText("*");
        jPanel1.add(jLabel22);
        jLabel22.setBounds(308, 30, 15, 15);

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 0, 0));
        jLabel23.setText("*");
        jPanel1.add(jLabel23);
        jLabel23.setBounds(308, 78, 15, 15);

        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(255, 0, 0));
        jLabel24.setText("*");
        jPanel1.add(jLabel24);
        jLabel24.setBounds(308, 125, 15, 15);

        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 0, 0));
        jLabel25.setText("*");
        jPanel1.add(jLabel25);
        jLabel25.setBounds(308, 283, 15, 15);

        jLabel26.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(255, 0, 0));
        jLabel26.setText("*");
        jPanel1.add(jLabel26);
        jLabel26.setBounds(308, 333, 15, 15);

        jLabel28.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(255, 0, 0));
        jLabel28.setText("*");
        jPanel1.add(jLabel28);
        jLabel28.setBounds(587, 30, 15, 15);

        jLabel29.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(255, 0, 0));
        jLabel29.setText("*");
        jPanel1.add(jLabel29);
        jLabel29.setBounds(587, 78, 15, 15);

        jLabel31.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(255, 0, 0));
        jLabel31.setText("*");
        jPanel1.add(jLabel31);
        jLabel31.setBounds(658, 125, 15, 15);

        jButton3.setBackground(new java.awt.Color(255, 0, 0));
        jButton3.setFont(new java.awt.Font("Tw Cen MT", 1, 14)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Guardar");
        jButton3.setBorder(null);
        jButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3);
        jButton3.setBounds(450, 190, 170, 40);

        jButton4.setBackground(new java.awt.Color(255, 0, 0));
        jButton4.setFont(new java.awt.Font("Tw Cen MT", 1, 14)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Limpiar");
        jButton4.setBorder(null);
        jButton4.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4);
        jButton4.setBounds(450, 260, 170, 40);

        jTabbedPane1.addTab("Nuevo Cliente", jPanel1);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        tabla_cuentasclientes.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tabla_cuentasclientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No. Cuenta", "Descripción", "Saldo (Lps.)", "Fecha Creación"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tabla_cuentasclientes);

        cb_cuentas_clientes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<Clientes>" }));
        cb_cuentas_clientes.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cb_cuentas_clientesItemStateChanged(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tw Cen MT", 1, 14)); // NOI18N
        jLabel12.setText("Codigo Cliente: ");

        tf_cc1.setEditable(false);

        bt_agregarcuenta.setBackground(new java.awt.Color(255, 0, 0));
        bt_agregarcuenta.setFont(new java.awt.Font("Tw Cen MT", 1, 14)); // NOI18N
        bt_agregarcuenta.setForeground(new java.awt.Color(255, 255, 255));
        bt_agregarcuenta.setText("Agregar Cuenta");
        bt_agregarcuenta.setBorder(null);
        bt_agregarcuenta.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        bt_agregarcuenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_agregarcuentaActionPerformed(evt);
            }
        });

        reti.setBackground(new java.awt.Color(255, 0, 0));
        reti.setFont(new java.awt.Font("Tw Cen MT", 1, 14)); // NOI18N
        reti.setForeground(new java.awt.Color(255, 255, 255));
        reti.setText("Hacer Retiro");
        reti.setBorder(null);
        reti.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        reti.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retiActionPerformed(evt);
            }
        });

        depo.setBackground(new java.awt.Color(255, 0, 0));
        depo.setFont(new java.awt.Font("Tw Cen MT", 1, 14)); // NOI18N
        depo.setForeground(new java.awt.Color(255, 255, 255));
        depo.setText("Hacer Deposito");
        depo.setBorder(null);
        depo.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        depo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                depoActionPerformed(evt);
            }
        });

        bt_eliminarcuenta.setBackground(new java.awt.Color(255, 0, 0));
        bt_eliminarcuenta.setFont(new java.awt.Font("Tw Cen MT", 1, 14)); // NOI18N
        bt_eliminarcuenta.setForeground(new java.awt.Color(255, 255, 255));
        bt_eliminarcuenta.setText("Eliminar Cuenta");
        bt_eliminarcuenta.setBorder(null);
        bt_eliminarcuenta.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        bt_eliminarcuenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_eliminarcuentaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(bt_agregarcuenta, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16)
                        .addComponent(bt_eliminarcuenta, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(reti, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16)
                        .addComponent(depo, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cb_cuentas_clientes, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addGap(10, 10, 10)
                                .addComponent(tf_cc1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(cb_cuentas_clientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(tf_cc1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bt_agregarcuenta, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt_eliminarcuenta, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(reti, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(depo, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Administracion Cuentas", jPanel2);

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));

        tabla_tarjetas.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tabla_tarjetas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Numero", "Descripcion", "Limite(Lps.)", "Saldo Actual", "Saldo Disp.", "Codigo Seguridad", "Tasa", "Emision", "Corte", "Tipo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.String.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane6.setViewportView(tabla_tarjetas);

        cb_cuentas_clientes1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<Clientes>" }));
        cb_cuentas_clientes1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cb_cuentas_clientes1ItemStateChanged(evt);
            }
        });

        jLabel37.setFont(new java.awt.Font("Tw Cen MT", 1, 14)); // NOI18N
        jLabel37.setText("Codigo Cliente: ");

        tf_cc2.setEditable(false);

        bt_agregarcuenta2.setBackground(new java.awt.Color(255, 0, 0));
        bt_agregarcuenta2.setFont(new java.awt.Font("Tw Cen MT", 1, 14)); // NOI18N
        bt_agregarcuenta2.setForeground(new java.awt.Color(255, 255, 255));
        bt_agregarcuenta2.setText("Agregar Tarjeta");
        bt_agregarcuenta2.setBorder(null);
        bt_agregarcuenta2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        bt_agregarcuenta2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_agregarcuenta2ActionPerformed(evt);
            }
        });

        bt_eliminarcuenta2.setBackground(new java.awt.Color(255, 0, 0));
        bt_eliminarcuenta2.setFont(new java.awt.Font("Tw Cen MT", 1, 14)); // NOI18N
        bt_eliminarcuenta2.setForeground(new java.awt.Color(255, 255, 255));
        bt_eliminarcuenta2.setText("Eliminar Tarjeta");
        bt_eliminarcuenta2.setBorder(null);
        bt_eliminarcuenta2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        bt_eliminarcuenta2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_eliminarcuenta2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(bt_agregarcuenta2, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(76, 76, 76)
                .addComponent(bt_eliminarcuenta2, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(183, 183, 183))
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(cb_cuentas_clientes1, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel37)
                        .addGap(10, 10, 10)
                        .addComponent(tf_cc2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 285, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel37)
                    .addComponent(tf_cc2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cb_cuentas_clientes1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 255, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bt_agregarcuenta2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt_eliminarcuenta2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33))
        );

        jTabbedPane1.addTab("Administracion Tarjetas", jPanel7);

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));

        tabla_tipotarjeta.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tabla_tipotarjeta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Còdigo", "Descripción", "Limite Maximo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tabla_tipotarjeta);

        jLabel3.setFont(new java.awt.Font("Tw Cen MT", 1, 24)); // NOI18N
        jLabel3.setText("Beneficios:");

        jButton7.setBackground(new java.awt.Color(255, 0, 0));
        jButton7.setFont(new java.awt.Font("Tw Cen MT", 1, 14)); // NOI18N
        jButton7.setForeground(new java.awt.Color(255, 255, 255));
        jButton7.setText("Cargar");
        jButton7.setBorder(null);
        jButton7.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        tabla_beneficios.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tabla_beneficios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Beneficio"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane5.setViewportView(tabla_beneficios);

        bt_agregarcuenta1.setBackground(new java.awt.Color(255, 0, 0));
        bt_agregarcuenta1.setFont(new java.awt.Font("Tw Cen MT", 1, 14)); // NOI18N
        bt_agregarcuenta1.setForeground(new java.awt.Color(255, 255, 255));
        bt_agregarcuenta1.setText("Agregar Tipo");
        bt_agregarcuenta1.setBorder(null);
        bt_agregarcuenta1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        bt_agregarcuenta1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_agregarcuenta1ActionPerformed(evt);
            }
        });

        bt_eliminarcuenta1.setBackground(new java.awt.Color(255, 0, 0));
        bt_eliminarcuenta1.setFont(new java.awt.Font("Tw Cen MT", 1, 14)); // NOI18N
        bt_eliminarcuenta1.setForeground(new java.awt.Color(255, 255, 255));
        bt_eliminarcuenta1.setText("Eliminar Tipo");
        bt_eliminarcuenta1.setBorder(null);
        bt_eliminarcuenta1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        bt_eliminarcuenta1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_eliminarcuenta1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addComponent(bt_agregarcuenta1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(16, 16, 16)
                                .addComponent(bt_eliminarcuenta1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 124, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bt_agregarcuenta1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bt_eliminarcuenta1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 113, Short.MAX_VALUE))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Tipos Tarjeta", jPanel6);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        tabla_clientes.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tabla_clientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nombre", "ID", "Tel. Fijo", "Tel. Celular", "Trabajo", "Direccion", "Username", "Contraseña"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla_clientes.setColumnSelectionAllowed(true);
        jScrollPane1.setViewportView(tabla_clientes);

        jButton6.setBackground(new java.awt.Color(255, 0, 0));
        jButton6.setFont(new java.awt.Font("Tw Cen MT", 1, 14)); // NOI18N
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setText("Eliminar Selección");
        jButton6.setBorder(null);
        jButton6.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton30.setBackground(new java.awt.Color(255, 0, 0));
        jButton30.setFont(new java.awt.Font("Tw Cen MT", 1, 14)); // NOI18N
        jButton30.setForeground(new java.awt.Color(255, 255, 255));
        jButton30.setText("Ver Reporte");
        jButton30.setBorder(null);
        jButton30.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton30.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton30ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 793, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(204, 204, 204)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54)
                .addComponent(jButton30, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton30, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Listar Clientes", jPanel3);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        tablagralcuentas.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tablagralcuentas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No. Cuenta", "A Nombre de", "Código Cliente", "Descripción", "Saldo (Lps.)", "Fecha Creación"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tablagralcuentas);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 793, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Listado Gral. de Cuentas", jPanel5);

        jPanel23.setBackground(new java.awt.Color(255, 255, 255));

        jPanel20.setBackground(new java.awt.Color(255, 255, 255));
        jPanel20.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, true), "Nueva Tienda", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tw Cen MT", 1, 14))); // NOI18N

        jLabel60.setFont(new java.awt.Font("Tw Cen MT", 1, 16)); // NOI18N
        jLabel60.setText("Nombre:");

        nombre12.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, true));

        jLabel61.setFont(new java.awt.Font("Tw Cen MT", 1, 16)); // NOI18N
        jLabel61.setText("RTN:");

        rtn2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, true));

        jButton14.setBackground(new java.awt.Color(255, 0, 0));
        jButton14.setFont(new java.awt.Font("Tw Cen MT", 1, 14)); // NOI18N
        jButton14.setForeground(new java.awt.Color(255, 255, 255));
        jButton14.setText("Agregar");
        jButton14.setBorder(null);
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel60)
                    .addComponent(jLabel61))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rtn2)
                    .addComponent(nombre12)
                    .addGroup(jPanel20Layout.createSequentialGroup()
                        .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 76, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel60)
                    .addComponent(nombre12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel61)
                    .addComponent(rtn2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(96, 96, 96)
                .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel21.setBackground(new java.awt.Color(255, 255, 255));
        jPanel21.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, true), "Nuevo Producto", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tw Cen MT", 1, 14))); // NOI18N

        nombreproducto.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, true));

        jLabel62.setFont(new java.awt.Font("Tw Cen MT", 1, 16)); // NOI18N
        jLabel62.setText("Nombre:");

        descripcionproducto.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, true));

        jLabel63.setFont(new java.awt.Font("Tw Cen MT", 1, 16)); // NOI18N
        jLabel63.setText("Descripcion:");

        jLabel64.setFont(new java.awt.Font("Tw Cen MT", 1, 16)); // NOI18N
        jLabel64.setText("Precio:");

        precioproducto.setText("0.00");
        precioproducto.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, true));

        jButton15.setBackground(new java.awt.Color(255, 0, 0));
        jButton15.setFont(new java.awt.Font("Tw Cen MT", 1, 14)); // NOI18N
        jButton15.setForeground(new java.awt.Color(255, 255, 255));
        jButton15.setText("Agregar");
        jButton15.setBorder(null);
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        jLabel65.setFont(new java.awt.Font("Tw Cen MT", 1, 16)); // NOI18N
        jLabel65.setText("Distribuidor:");

        distruibuidor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<Tiendas>" }));

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel21Layout.createSequentialGroup()
                        .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel63)
                            .addComponent(jLabel62)
                            .addComponent(jLabel64))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel21Layout.createSequentialGroup()
                                .addComponent(jButton15, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 89, Short.MAX_VALUE))
                            .addComponent(precioproducto)
                            .addComponent(nombreproducto)
                            .addComponent(descripcionproducto)))
                    .addGroup(jPanel21Layout.createSequentialGroup()
                        .addComponent(jLabel65)
                        .addGap(18, 18, 18)
                        .addComponent(distruibuidor, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel65)
                    .addComponent(distruibuidor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel62)
                    .addComponent(nombreproducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel63)
                    .addComponent(descripcionproducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel64)
                    .addComponent(precioproducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addComponent(jButton15, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(58, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel23Layout = new javax.swing.GroupLayout(jPanel23);
        jPanel23.setLayout(jPanel23Layout);
        jPanel23Layout.setHorizontalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel23Layout.setVerticalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Tiendas/Productos", jPanel23);

        jPanel24.setBackground(new java.awt.Color(255, 255, 255));

        ec1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<Clientes>" }));
        ec1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ec1ItemStateChanged(evt);
            }
        });

        tj1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<Tarjetas>" }));
        tj1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                tj1ItemStateChanged(evt);
            }
        });

        jLabel74.setFont(new java.awt.Font("Tw Cen MT", 1, 16)); // NOI18N
        jLabel74.setText("Codigo:");

        jLabel75.setFont(new java.awt.Font("Tw Cen MT", 1, 16)); // NOI18N
        jLabel75.setText("Descripcón:");

        jLabel76.setFont(new java.awt.Font("Tw Cen MT", 1, 16)); // NOI18N
        jLabel76.setText("Año:");

        jLabel77.setFont(new java.awt.Font("Tw Cen MT", 1, 16)); // NOI18N
        jLabel77.setText("Mes:");

        jLabel78.setFont(new java.awt.Font("Tw Cen MT", 1, 16)); // NOI18N
        jLabel78.setText("Pago Minimo:");

        jLabel80.setFont(new java.awt.Font("Tw Cen MT", 1, 16)); // NOI18N
        jLabel80.setText("Fecha Máximo de Pago:");

        jLabel81.setFont(new java.awt.Font("Tw Cen MT", 1, 16)); // NOI18N
        jLabel81.setText("No. Tarjeta:");

        notj.setEditable(false);

        jTextField4.setEditable(false);
        jTextField4.setText("0.10");

        jTextField5.setEditable(false);
        jTextField5.setText("Fecha de Corte de Tarjeta");

        jButton25.setBackground(new java.awt.Color(255, 0, 0));
        jButton25.setFont(new java.awt.Font("Tw Cen MT", 1, 16)); // NOI18N
        jButton25.setForeground(new java.awt.Color(255, 255, 255));
        jButton25.setText("Guardar");
        jButton25.setBorder(null);
        jButton25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton25ActionPerformed(evt);
            }
        });

        jLabel79.setText("% del Total");

        ecm.setMaximumRowCount(15);
        ecm.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<Meses>", "Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre" }));

        javax.swing.GroupLayout jPanel24Layout = new javax.swing.GroupLayout(jPanel24);
        jPanel24.setLayout(jPanel24Layout);
        jPanel24Layout.setHorizontalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel24Layout.createSequentialGroup()
                        .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ec1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tj1, 0, 165, Short.MAX_VALUE))
                        .addGap(44, 44, 44)
                        .addComponent(jLabel81)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(notj, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel24Layout.createSequentialGroup()
                        .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel24Layout.createSequentialGroup()
                                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel75)
                                    .addComponent(jLabel74))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(ecc, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                                    .addComponent(ecd)))
                            .addGroup(jPanel24Layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel80)
                                        .addGroup(jPanel24Layout.createSequentialGroup()
                                            .addComponent(jLabel76)
                                            .addGap(18, 18, 18)
                                            .addComponent(eca, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(30, 30, 30))
                                        .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel24Layout.createSequentialGroup()
                                        .addGap(14, 14, 14)
                                        .addComponent(jLabel77)
                                        .addGap(18, 18, 18)
                                        .addComponent(ecm, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel78)))
                .addGap(34, 34, 34)
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel24Layout.createSequentialGroup()
                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel79))
                    .addComponent(jButton25, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(183, 183, 183))
        );
        jPanel24Layout.setVerticalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ec1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tj1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel81)
                    .addComponent(notj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel24Layout.createSequentialGroup()
                        .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel24Layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(jLabel74)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel75))
                            .addGroup(jPanel24Layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ecc, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel78)
                                        .addComponent(jLabel79)))
                                .addGap(18, 18, 18)
                                .addComponent(ecd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel77)
                            .addComponent(ecm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel76)
                            .addComponent(eca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel24Layout.createSequentialGroup()
                        .addGap(112, 112, 112)
                        .addComponent(jButton25, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)))
                .addComponent(jLabel80)
                .addGap(26, 26, 26)
                .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(74, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Generar EC", jPanel24);

        jPanel8.setBackground(new java.awt.Color(255, 0, 0));

        jLabel9.setFont(new java.awt.Font("Tunga", 2, 36)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Bienvenido, Admin.");

        jButton5.setBackground(new java.awt.Color(255, 0, 51));
        jButton5.setFont(new java.awt.Font("Tw Cen MT", 1, 14)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("Cerrar Sesión");
        jButton5.setBorder(null);
        jButton5.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addGap(0, 14, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );

        javax.swing.GroupLayout master_adminLayout = new javax.swing.GroupLayout(master_admin.getContentPane());
        master_admin.getContentPane().setLayout(master_adminLayout);
        master_adminLayout.setHorizontalGroup(
            master_adminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(master_adminLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 818, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        master_adminLayout.setVerticalGroup(
            master_adminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(master_adminLayout.createSequentialGroup()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1)
                .addGap(6, 6, 6))
        );

        nueva_cuenta.setResizable(false);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        jLabel16.setFont(new java.awt.Font("Tunga", 2, 36)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(220, 12, 34));
        jLabel16.setText("Nueva Cuenta");

        jLabel27.setFont(new java.awt.Font("Tw Cen MT", 1, 16)); // NOI18N
        jLabel27.setText("No. Cuenta Bancaria");

        num_cuentabancaria.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, true));

        jLabel30.setFont(new java.awt.Font("Tw Cen MT", 1, 16)); // NOI18N
        jLabel30.setText("Descripcion:");

        descripcion_cuentabancaria.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, true));

        jLabel32.setFont(new java.awt.Font("Tw Cen MT", 1, 16)); // NOI18N
        jLabel32.setText("Deposito Inicial:");

        depositoinicial_cuentabancaria.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, true));

        jButton2.setBackground(new java.awt.Color(255, 0, 0));
        jButton2.setFont(new java.awt.Font("Tw Cen MT", 1, 16)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Guardar");
        jButton2.setBorder(null);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel27)
                        .addGap(15, 15, 15)
                        .addComponent(num_cuentabancaria, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel30)
                        .addGap(69, 69, 69)
                        .addComponent(descripcion_cuentabancaria, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel32)
                        .addGap(43, 43, 43)
                        .addComponent(depositoinicial_cuentabancaria, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(num_cuentabancaria))
                .addGap(20, 20, 20)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel30, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(descripcion_cuentabancaria))
                .addGap(20, 20, 20)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel32, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(depositoinicial_cuentabancaria))
                .addGap(36, 36, 36)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(52, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout nueva_cuentaLayout = new javax.swing.GroupLayout(nueva_cuenta.getContentPane());
        nueva_cuenta.getContentPane().setLayout(nueva_cuentaLayout);
        nueva_cuentaLayout.setHorizontalGroup(
            nueva_cuentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        nueva_cuentaLayout.setVerticalGroup(
            nueva_cuentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jPanel10.setBackground(new java.awt.Color(255, 255, 255));

        jLabel6.setFont(new java.awt.Font("Tw Cen MT", 3, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(220, 12, 34));
        jLabel6.setText("Nuevo Tipo de Tarjeta");

        jLabel35.setFont(new java.awt.Font("Tw Cen MT", 1, 16)); // NOI18N
        jLabel35.setText("Código:");

        codigo_tipotarjeta.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, true));

        jLabel34.setFont(new java.awt.Font("Tw Cen MT", 1, 16)); // NOI18N
        jLabel34.setText("Descripcion:");

        descripcion_tipotarjeta.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, true));

        jLabel33.setFont(new java.awt.Font("Tw Cen MT", 1, 16)); // NOI18N
        jLabel33.setText("Límite Máximo:");

        limite_tipotarjeta.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, true));

        jLabel36.setFont(new java.awt.Font("Tw Cen MT", 1, 16)); // NOI18N
        jLabel36.setText("Beneficios:");

        contador_beneficiostarjeta.setEditable(false);
        contador_beneficiostarjeta.setBackground(new java.awt.Color(255, 0, 0));
        contador_beneficiostarjeta.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        contador_beneficiostarjeta.setForeground(new java.awt.Color(255, 255, 255));
        contador_beneficiostarjeta.setText("0");

        jButton9.setBackground(new java.awt.Color(255, 0, 0));
        jButton9.setFont(new java.awt.Font("Tw Cen MT", 1, 12)); // NOI18N
        jButton9.setForeground(new java.awt.Color(255, 255, 255));
        jButton9.setText("Agregar Beneficio");
        jButton9.setBorder(null);
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton8.setBackground(new java.awt.Color(255, 0, 0));
        jButton8.setFont(new java.awt.Font("Tw Cen MT", 1, 16)); // NOI18N
        jButton8.setForeground(new java.awt.Color(255, 255, 255));
        jButton8.setText("Guardar");
        jButton8.setBorder(null);
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel35)
                        .addGap(58, 58, 58)
                        .addComponent(codigo_tipotarjeta, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel34)
                        .addGap(29, 29, 29)
                        .addComponent(descripcion_tipotarjeta, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel33)
                        .addGap(6, 6, 6)
                        .addComponent(limite_tipotarjeta, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel36)
                        .addGap(18, 18, 18)
                        .addComponent(contador_beneficiostarjeta, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22)
                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel35, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(codigo_tipotarjeta))
                .addGap(12, 12, 12)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel34, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(descripcion_tipotarjeta))
                .addGap(18, 18, 18)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel33, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(limite_tipotarjeta))
                .addGap(20, 20, 20)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel36)
                    .addComponent(contador_beneficiostarjeta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton9))
                .addGap(37, 37, 37)
                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout nuevo_tipoLayout = new javax.swing.GroupLayout(nuevo_tipo.getContentPane());
        nuevo_tipo.getContentPane().setLayout(nuevo_tipoLayout);
        nuevo_tipoLayout.setHorizontalGroup(
            nuevo_tipoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        nuevo_tipoLayout.setVerticalGroup(
            nuevo_tipoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        nueva_tarjeta.setBackground(new java.awt.Color(255, 255, 255));

        jPanel14.setBackground(new java.awt.Color(255, 255, 255));
        jPanel14.setToolTipText("");

        jLabel39.setFont(new java.awt.Font("Tunga", 2, 36)); // NOI18N
        jLabel39.setForeground(new java.awt.Color(220, 12, 34));
        jLabel39.setText("Nueva Tarjeta");

        jLabel38.setFont(new java.awt.Font("Tw Cen MT", 1, 16)); // NOI18N
        jLabel38.setText("Numero Tarjeta:");

        no_tarjeta.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, true));

        jLabel40.setFont(new java.awt.Font("Tw Cen MT", 1, 16)); // NOI18N
        jLabel40.setText("Descripcion:");

        descripcion_tarjeta.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, true));

        jLabel41.setFont(new java.awt.Font("Tw Cen MT", 1, 16)); // NOI18N
        jLabel41.setText("Limite (Lps.):");

        jLabel42.setFont(new java.awt.Font("Tw Cen MT", 1, 16)); // NOI18N
        jLabel42.setText("Saldo:");

        jLabel43.setFont(new java.awt.Font("Tw Cen MT", 1, 16)); // NOI18N
        jLabel43.setText("Codigo Seguridad:");

        saldo_tarjeta.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, true));

        limite_tarjeta.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, true));

        codseguridad_tarjeta.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, true));

        jLabel44.setFont(new java.awt.Font("Tw Cen MT", 1, 16)); // NOI18N
        jLabel44.setText("Tasa Interes Mensual: ");

        tasa_tarjeta.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, true));

        jLabel45.setFont(new java.awt.Font("Tw Cen MT", 1, 16)); // NOI18N
        jLabel45.setText("Fecha de Corte:");

        jLabel46.setFont(new java.awt.Font("Tw Cen MT", 1, 16)); // NOI18N
        jLabel46.setText("Tipo de Tarjeta:");

        cb_tt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<Tipos>" }));
        cb_tt.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cb_ttItemStateChanged(evt);
            }
        });

        tabla_tt2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tabla_tt2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Limite"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane7.setViewportView(tabla_tt2);

        jButton10.setBackground(new java.awt.Color(255, 0, 0));
        jButton10.setFont(new java.awt.Font("Tw Cen MT", 1, 16)); // NOI18N
        jButton10.setForeground(new java.awt.Color(255, 255, 255));
        jButton10.setText("Guardar");
        jButton10.setBorder(null);
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel39, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addComponent(jLabel38)
                                .addGap(62, 62, 62)
                                .addComponent(no_tarjeta, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addComponent(jLabel40)
                                .addGap(89, 89, 89)
                                .addComponent(descripcion_tarjeta, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addComponent(jLabel41)
                                .addGap(85, 85, 85)
                                .addComponent(limite_tarjeta, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addComponent(jLabel42)
                                .addGap(128, 128, 128)
                                .addComponent(saldo_tarjeta, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addComponent(jLabel43)
                                .addGap(46, 46, 46)
                                .addComponent(codseguridad_tarjeta, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel44)
                                    .addComponent(jLabel45))
                                .addGap(20, 20, 20)
                                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(tasa_tarjeta, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
                                    .addComponent(fechacorte, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(43, 43, 43)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel46)
                            .addComponent(cb_tt, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(240, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(240, 240, 240))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel39, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel38)
                            .addComponent(no_tarjeta, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jLabel40))
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(descripcion_tarjeta, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(jLabel46)
                        .addGap(22, 22, 22)
                        .addComponent(cb_tt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel41, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(limite_tarjeta, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel42, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(saldo_tarjeta, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel43, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(codseguridad_tarjeta, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel44, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tasa_tarjeta, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel45)
                                .addGap(86, 86, 86))
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(fechacorte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
        );

        javax.swing.GroupLayout nueva_tarjetaLayout = new javax.swing.GroupLayout(nueva_tarjeta.getContentPane());
        nueva_tarjeta.getContentPane().setLayout(nueva_tarjetaLayout);
        nueva_tarjetaLayout.setHorizontalGroup(
            nueva_tarjetaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        nueva_tarjetaLayout.setVerticalGroup(
            nueva_tarjetaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        master_client.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        master_client.setTitle("SOTA Atlantida Sucursal Electronica");
        master_client.setResizable(false);

        jPanel15.setBackground(new java.awt.Color(255, 0, 0));

        jLabel2.setFont(new java.awt.Font("Tw Cen MT", 1, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Bienvenido");

        nombre1.setForeground(new java.awt.Color(255, 255, 255));
        nombre1.setText("jLabel4");

        jButton11.setBackground(new java.awt.Color(255, 0, 0));
        jButton11.setFont(new java.awt.Font("Tw Cen MT", 1, 14)); // NOI18N
        jButton11.setForeground(new java.awt.Color(255, 255, 255));
        jButton11.setText("Hacer Deposito");
        jButton11.setBorder(null);
        jButton11.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        dia.setFont(new java.awt.Font("Tw Cen MT", 1, 16)); // NOI18N
        dia.setForeground(new java.awt.Color(255, 255, 255));
        dia.setText("jLabel4");

        hora.setFont(new java.awt.Font("Tw Cen MT", 1, 16)); // NOI18N
        hora.setForeground(new java.awt.Color(255, 255, 255));
        hora.setText("jLabel4");

        jButton17.setBackground(new java.awt.Color(255, 0, 0));
        jButton17.setFont(new java.awt.Font("Tw Cen MT", 1, 14)); // NOI18N
        jButton17.setForeground(new java.awt.Color(255, 255, 255));
        jButton17.setText("Hacer Compra");
        jButton17.setBorder(null);
        jButton17.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });

        jButton18.setBackground(new java.awt.Color(255, 0, 0));
        jButton18.setFont(new java.awt.Font("Tw Cen MT", 1, 14)); // NOI18N
        jButton18.setForeground(new java.awt.Color(255, 255, 255));
        jButton18.setText("Pagar Tarjeta");
        jButton18.setBorder(null);
        jButton18.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });

        jButton19.setBackground(new java.awt.Color(255, 0, 0));
        jButton19.setFont(new java.awt.Font("Tw Cen MT", 1, 14)); // NOI18N
        jButton19.setForeground(new java.awt.Color(255, 255, 255));
        jButton19.setText("Estados de Cuenta");
        jButton19.setBorder(null);
        jButton19.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19ActionPerformed(evt);
            }
        });

        jButton20.setBackground(new java.awt.Color(255, 0, 0));
        jButton20.setFont(new java.awt.Font("Tw Cen MT", 1, 14)); // NOI18N
        jButton20.setForeground(new java.awt.Color(255, 255, 255));
        jButton20.setText("Consulta de Saldo");
        jButton20.setBorder(null);
        jButton20.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton20ActionPerformed(evt);
            }
        });

        jButton21.setBackground(new java.awt.Color(255, 0, 0));
        jButton21.setFont(new java.awt.Font("Tw Cen MT", 1, 14)); // NOI18N
        jButton21.setForeground(new java.awt.Color(255, 255, 255));
        jButton21.setText("Cerrar Sesion");
        jButton21.setBorder(null);
        jButton21.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton21ActionPerformed(evt);
            }
        });

        jButton28.setBackground(new java.awt.Color(255, 0, 0));
        jButton28.setFont(new java.awt.Font("Tw Cen MT", 1, 14)); // NOI18N
        jButton28.setForeground(new java.awt.Color(255, 255, 255));
        jButton28.setText("Refrescar User");
        jButton28.setBorder(null);
        jButton28.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton28.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton28ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nombre1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(dia)
                            .addComponent(hora))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jButton17, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton18, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton19, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)
                    .addComponent(jButton20, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nombre1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(dia)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(hora)
                .addGap(17, 17, 17)
                .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton17, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton18, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton19, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton20, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton28, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton21, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        panelprincipal.setBackground(new java.awt.Color(255, 255, 255));
        panelprincipal.setLayout(new java.awt.CardLayout());

        hacerdeposito.setBackground(new java.awt.Color(255, 255, 255));

        jPanel16.setBackground(new java.awt.Color(255, 255, 255));
        jPanel16.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 2, true), "Deposito a otra Cuenta", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tw Cen MT", 1, 14))); // NOI18N

        jLabel56.setFont(new java.awt.Font("Tw Cen MT", 1, 14)); // NOI18N
        jLabel56.setText("Monto a Depositar:");

        cb3.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cb3ItemStateChanged(evt);
            }
        });

        sa3.setEditable(false);
        sa3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, true));

        jLabel54.setFont(new java.awt.Font("Tw Cen MT", 1, 14)); // NOI18N
        jLabel54.setText("Descripcion:");

        jLabel55.setFont(new java.awt.Font("Tw Cen MT", 1, 14)); // NOI18N
        jLabel55.setText("Saldo Actual:");

        jLabel53.setFont(new java.awt.Font("Tw Cen MT", 1, 14)); // NOI18N
        jLabel53.setText("De la cuenta:");

        jButton13.setBackground(new java.awt.Color(255, 0, 0));
        jButton13.setFont(new java.awt.Font("Tw Cen MT", 1, 14)); // NOI18N
        jButton13.setForeground(new java.awt.Color(255, 255, 255));
        jButton13.setText("Depositar");
        jButton13.setBorder(null);
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        dp2.setText("0.00");
        dp2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, true));

        dc3.setEditable(false);
        dc3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, true));

        jLabel57.setFont(new java.awt.Font("Tw Cen MT", 1, 14)); // NOI18N
        jLabel57.setText("A la cuenta:");

        destinatario.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, true));

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel16Layout.createSequentialGroup()
                                .addComponent(jLabel53)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cb3, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(67, 67, 67)
                                .addComponent(jLabel57)
                                .addGap(18, 18, 18)
                                .addComponent(destinatario))
                            .addGroup(jPanel16Layout.createSequentialGroup()
                                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel16Layout.createSequentialGroup()
                                        .addComponent(jLabel56)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(dp2, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel16Layout.createSequentialGroup()
                                        .addComponent(jLabel55)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(sa3, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 90, Short.MAX_VALUE)
                                .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(84, 84, 84))
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addComponent(jLabel54)
                        .addGap(18, 18, 18)
                        .addComponent(dc3, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel53)
                    .addComponent(cb3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel57)
                    .addComponent(destinatario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel54)
                            .addComponent(dc3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel55)
                            .addGroup(jPanel16Layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(sa3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(32, 32, 32)
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel56)
                            .addComponent(dp2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jPanel17.setBackground(new java.awt.Color(255, 255, 255));
        jPanel17.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 2, true), "Deposito entre Cuentas", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tw Cen MT", 1, 14))); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tw Cen MT", 1, 14)); // NOI18N
        jLabel5.setText("De la cuenta:");

        jLabel7.setFont(new java.awt.Font("Tw Cen MT", 1, 14)); // NOI18N
        jLabel7.setText("A la cuenta:");

        cb1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cb1ItemStateChanged(evt);
            }
        });

        cb2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cb2ItemStateChanged(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tw Cen MT", 1, 14)); // NOI18N
        jLabel8.setText("Descripcion:");

        jLabel49.setFont(new java.awt.Font("Tw Cen MT", 1, 14)); // NOI18N
        jLabel49.setText("Saldo Actual:");

        jLabel50.setFont(new java.awt.Font("Tw Cen MT", 1, 14)); // NOI18N
        jLabel50.setText("Monto a Depositar:");

        jLabel51.setFont(new java.awt.Font("Tw Cen MT", 1, 14)); // NOI18N
        jLabel51.setText("Descripcion");

        jLabel52.setFont(new java.awt.Font("Tw Cen MT", 1, 14)); // NOI18N
        jLabel52.setText("Saldo Actual:");

        dc1.setEditable(false);
        dc1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, true));

        sa1.setEditable(false);
        sa1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, true));

        dc2.setEditable(false);
        dc2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, true));

        sa2.setEditable(false);
        sa2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, true));

        dp1.setText("0.00");
        dp1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, true));

        jButton12.setBackground(new java.awt.Color(255, 0, 0));
        jButton12.setFont(new java.awt.Font("Tw Cen MT", 1, 14)); // NOI18N
        jButton12.setForeground(new java.awt.Color(255, 255, 255));
        jButton12.setText("Depositar");
        jButton12.setBorder(null);
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addComponent(jLabel50)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dp1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel17Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cb1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel17Layout.createSequentialGroup()
                                .addComponent(jLabel49)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(sa1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel17Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(18, 18, 18)
                                .addComponent(dc1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(51, 51, 51)
                        .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addGroup(jPanel17Layout.createSequentialGroup()
                                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel51)
                                    .addComponent(jLabel52))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(sa2, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel17Layout.createSequentialGroup()
                                        .addGap(1, 1, 1)
                                        .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(cb2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(dc2, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE))))))))
                .addContainerGap(83, Short.MAX_VALUE))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel7)
                    .addComponent(cb1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cb2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(dc1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addComponent(jLabel49))
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addComponent(jLabel51)
                        .addGap(26, 26, 26)
                        .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel52)
                            .addComponent(sa1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(dc2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(sa2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel50)
                            .addComponent(dp1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel17Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                        .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22))))
        );

        javax.swing.GroupLayout hacerdepositoLayout = new javax.swing.GroupLayout(hacerdeposito);
        hacerdeposito.setLayout(hacerdepositoLayout);
        hacerdepositoLayout.setHorizontalGroup(
            hacerdepositoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(hacerdepositoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(hacerdepositoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        hacerdepositoLayout.setVerticalGroup(
            hacerdepositoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, hacerdepositoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(68, Short.MAX_VALUE))
        );

        panelprincipal.add(hacerdeposito, "hacerdeposito");

        hacercompra.setBackground(new java.awt.Color(255, 255, 255));

        jLabel66.setFont(new java.awt.Font("Tw Cen MT", 3, 36)); // NOI18N
        jLabel66.setForeground(new java.awt.Color(220, 12, 34));
        jLabel66.setText("Solicitar Conexión con Sota Mall®:");

        jButton16.setBackground(new java.awt.Color(255, 0, 0));
        jButton16.setFont(new java.awt.Font("Tw Cen MT", 1, 16)); // NOI18N
        jButton16.setForeground(new java.awt.Color(255, 255, 255));
        jButton16.setText("Mandar Petición");
        jButton16.setBorder(null);
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        jPanel22.setBackground(new java.awt.Color(255, 255, 255));
        jPanel22.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, true), "Checkout", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tw Cen MT", 1, 18))); // NOI18N

        jButton22.setBackground(new java.awt.Color(255, 0, 0));
        jButton22.setFont(new java.awt.Font("Tw Cen MT", 1, 16)); // NOI18N
        jButton22.setForeground(new java.awt.Color(255, 255, 255));
        jButton22.setText("Confirmar");
        jButton22.setBorder(null);
        jButton22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton22ActionPerformed(evt);
            }
        });

        jLabel70.setFont(new java.awt.Font("Tw Cen MT", 1, 16)); // NOI18N
        jLabel70.setText("Total a pagar:");

        tp.setEditable(false);
        tp.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0)));

        jLabel71.setFont(new java.awt.Font("Tw Cen MT", 1, 16)); // NOI18N
        jLabel71.setText("Descripción de la Compra:");

        jScrollPane10.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane10.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        descripcioncompra.setColumns(20);
        descripcioncompra.setRows(5);
        descripcioncompra.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0)));
        jScrollPane10.setViewportView(descripcioncompra);

        cbtj.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<Tarjetas>" }));
        cbtj.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbtjItemStateChanged(evt);
            }
        });

        jLabel72.setFont(new java.awt.Font("Tw Cen MT", 1, 16)); // NOI18N
        jLabel72.setText("Saldo Disponible:");

        jLabel73.setFont(new java.awt.Font("Tw Cen MT", 1, 16)); // NOI18N
        jLabel73.setText("Elija la tarjeta:");

        sds.setEditable(false);
        sds.setText("0.00");
        sds.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0)));

        jButton23.setBackground(new java.awt.Color(255, 0, 0));
        jButton23.setFont(new java.awt.Font("Tw Cen MT", 1, 16)); // NOI18N
        jButton23.setForeground(new java.awt.Color(255, 255, 255));
        jButton23.setText("Descargar");
        jButton23.setBorder(null);
        jButton23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton23ActionPerformed(evt);
            }
        });

        jButton24.setBackground(new java.awt.Color(255, 0, 0));
        jButton24.setFont(new java.awt.Font("Tw Cen MT", 1, 16)); // NOI18N
        jButton24.setForeground(new java.awt.Color(255, 255, 255));
        jButton24.setText("Cancelar");
        jButton24.setBorder(null);
        jButton24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton24ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel22Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel22Layout.createSequentialGroup()
                                .addComponent(jLabel70)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(tp))
                            .addComponent(jLabel71)
                            .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel22Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jButton23, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel22Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(jLabel72)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(sds, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
                        .addGap(4, 4, 4))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel22Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel22Layout.createSequentialGroup()
                                .addComponent(jLabel73)
                                .addGap(18, 18, 18)
                                .addComponent(cbtj, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel22Layout.createSequentialGroup()
                                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton24, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton22, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(41, 41, 41))))))
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel22Layout.createSequentialGroup()
                        .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbtj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel73))
                        .addGap(32, 32, 32))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel22Layout.createSequentialGroup()
                        .addComponent(jButton23, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel70)
                    .addGroup(jPanel22Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tp)
                            .addComponent(jLabel72)
                            .addComponent(sds, javax.swing.GroupLayout.DEFAULT_SIZE, 21, Short.MAX_VALUE))))
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel22Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel71)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel22Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jButton22, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton24, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jLabel67.setFont(new java.awt.Font("Tw Cen MT", 1, 16)); // NOI18N
        jLabel67.setText("Presione el siguiente botón para establecer la conexión:");

        jLabel68.setFont(new java.awt.Font("Tw Cen MT", 1, 16)); // NOI18N
        jLabel68.setText("Una vez presionado, espere la confirmacion por parte del comercio y presione el boton");

        jLabel69.setFont(new java.awt.Font("Tw Cen MT", 1, 16)); // NOI18N
        jLabel69.setText("\"Descargar\".");

        javax.swing.GroupLayout hacercompraLayout = new javax.swing.GroupLayout(hacercompra);
        hacercompra.setLayout(hacercompraLayout);
        hacercompraLayout.setHorizontalGroup(
            hacercompraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(hacercompraLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, hacercompraLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton16, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(165, 165, 165))
            .addGroup(hacercompraLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(hacercompraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel69)
                    .addComponent(jLabel68)
                    .addComponent(jLabel67)
                    .addComponent(jLabel66))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        hacercompraLayout.setVerticalGroup(
            hacercompraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(hacercompraLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jLabel66)
                .addGap(18, 18, 18)
                .addComponent(jLabel67)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton16, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel68)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel69)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(20, 20, 20))
        );

        panelprincipal.add(hacercompra, "hacercompra");

        pagartarjeta.setBackground(new java.awt.Color(255, 255, 255));

        jLabel83.setFont(new java.awt.Font("Tw Cen MT", 1, 16)); // NOI18N
        jLabel83.setText("Pago Minimo:");

        jLabel85.setFont(new java.awt.Font("Tw Cen MT", 1, 16)); // NOI18N
        jLabel85.setText("Pago Contado:");

        jButton29.setBackground(new java.awt.Color(255, 0, 0));
        jButton29.setFont(new java.awt.Font("Tw Cen MT", 1, 16)); // NOI18N
        jButton29.setForeground(new java.awt.Color(255, 255, 255));
        jButton29.setText("Pagar");
        jButton29.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton29ActionPerformed(evt);
            }
        });

        jButton32.setBackground(new java.awt.Color(255, 0, 0));
        jButton32.setFont(new java.awt.Font("Tw Cen MT", 1, 16)); // NOI18N
        jButton32.setForeground(new java.awt.Color(255, 255, 255));
        jButton32.setText("Pagar");
        jButton32.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton32ActionPerformed(evt);
            }
        });

        jPanel27.setBackground(new java.awt.Color(255, 255, 255));
        jPanel27.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 2, true), "Tarjeta a Pagar", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tw Cen MT", 1, 17))); // NOI18N

        cbtj98.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbtj98.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbtj98ItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel27Layout = new javax.swing.GroupLayout(jPanel27);
        jPanel27.setLayout(jPanel27Layout);
        jPanel27Layout.setHorizontalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel27Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cbtj98, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel27Layout.setVerticalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel27Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cbtj98, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        jPanel28.setBackground(new java.awt.Color(255, 255, 255));
        jPanel28.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 2, true), "Cuenta a Utilizar", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tw Cen MT", 1, 17))); // NOI18N

        cbcnts.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbcnts.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbcntsItemStateChanged(evt);
            }
        });

        jLabel87.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        jLabel87.setText("Saldo:");

        xyz.setEditable(false);

        javax.swing.GroupLayout jPanel28Layout = new javax.swing.GroupLayout(jPanel28);
        jPanel28.setLayout(jPanel28Layout);
        jPanel28Layout.setHorizontalGroup(
            jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel28Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel28Layout.createSequentialGroup()
                        .addComponent(jLabel87)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(xyz, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 41, Short.MAX_VALUE))
                    .addComponent(cbcnts, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel28Layout.setVerticalGroup(
            jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel28Layout.createSequentialGroup()
                .addGap(0, 11, Short.MAX_VALUE)
                .addComponent(cbcnts, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel87)
                    .addComponent(xyz, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7))
        );

        javax.swing.GroupLayout pagartarjetaLayout = new javax.swing.GroupLayout(pagartarjeta);
        pagartarjeta.setLayout(pagartarjetaLayout);
        pagartarjetaLayout.setHorizontalGroup(
            pagartarjetaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pagartarjetaLayout.createSequentialGroup()
                .addGap(145, 145, 145)
                .addGroup(pagartarjetaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pagartarjetaLayout.createSequentialGroup()
                        .addComponent(jLabel83)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pminimo, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pagartarjetaLayout.createSequentialGroup()
                        .addComponent(jLabel85)
                        .addGap(18, 18, 18)
                        .addComponent(pcontado, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pagartarjetaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton29, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton32, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(161, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pagartarjetaLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(pagartarjetaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(178, 178, 178))
        );
        pagartarjetaLayout.setVerticalGroup(
            pagartarjetaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pagartarjetaLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jPanel27, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addComponent(jPanel28, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addGroup(pagartarjetaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel83)
                    .addComponent(pminimo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton29))
                .addGap(25, 25, 25)
                .addGroup(pagartarjetaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel85)
                    .addComponent(pcontado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton32))
                .addGap(104, 104, 104))
        );

        panelprincipal.add(pagartarjeta, "pagartarjetas");

        estados.setBackground(new java.awt.Color(255, 255, 255));

        jPanel25.setBackground(new java.awt.Color(255, 255, 255));
        jPanel25.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 2, true), "Elija la Tarjeta", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tw Cen MT", 1, 14))); // NOI18N

        tj2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<Tarjetas>" }));
        tj2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                tj2ItemStateChanged(evt);
            }
        });

        jLabel82.setFont(new java.awt.Font("Tw Cen MT", 1, 15)); // NOI18N
        jLabel82.setText("Tarjeta:");

        jButton26.setBackground(new java.awt.Color(255, 0, 0));
        jButton26.setFont(new java.awt.Font("Tw Cen MT", 1, 16)); // NOI18N
        jButton26.setForeground(new java.awt.Color(255, 255, 255));
        jButton26.setText("Generar");
        jButton26.setBorder(null);
        jButton26.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton26ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel25Layout = new javax.swing.GroupLayout(jPanel25);
        jPanel25.setLayout(jPanel25Layout);
        jPanel25Layout.setHorizontalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel25Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel82)
                .addGap(18, 18, 18)
                .addComponent(tj2, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(276, 276, 276)
                .addComponent(jButton26, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel25Layout.setVerticalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel25Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tj2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel82, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton26, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        jPanel26.setBackground(new java.awt.Color(255, 255, 255));
        jPanel26.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 2, true), "Estado de Cuenta", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tw Cen MT", 1, 14))); // NOI18N

        tablaestados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Descripcion", "Mes", "Año", "Contado", "Mínimo", "Fecha Maxima Pago", "Fecha Pago Realizado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane12.setViewportView(tablaestados);

        javax.swing.GroupLayout jPanel26Layout = new javax.swing.GroupLayout(jPanel26);
        jPanel26.setLayout(jPanel26Layout);
        jPanel26Layout.setHorizontalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane12)
                .addContainerGap())
        );
        jPanel26Layout.setVerticalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tabladetalles.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fecha", "Descripcion", "Monto"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane11.setViewportView(tabladetalles);

        jLabel84.setFont(new java.awt.Font("Tw Cen MT", 1, 16)); // NOI18N
        jLabel84.setText("Mes:");

        mnths.setMaximumRowCount(15);
        mnths.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<Todos>", "Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre" }));
        mnths.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                mnthsItemStateChanged(evt);
            }
        });

        jButton27.setBackground(new java.awt.Color(255, 0, 0));
        jButton27.setForeground(new java.awt.Color(255, 255, 255));
        jButton27.setText("Importar a PDF");
        jButton27.setBorder(null);
        jButton27.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton27ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout estadosLayout = new javax.swing.GroupLayout(estados);
        estados.setLayout(estadosLayout);
        estadosLayout.setHorizontalGroup(
            estadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(estadosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(estadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane11)
                    .addGroup(estadosLayout.createSequentialGroup()
                        .addComponent(jLabel84)
                        .addGap(18, 18, 18)
                        .addComponent(mnths, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton27, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)))
                .addContainerGap())
        );
        estadosLayout.setVerticalGroup(
            estadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(estadosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(estadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton27, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                    .addGroup(estadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel84)
                        .addComponent(mnths, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(14, 14, 14)
                .addComponent(jPanel26, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );

        panelprincipal.add(estados, "estados");

        home.setBackground(new java.awt.Color(255, 255, 255));

        homecoming.setFont(new java.awt.Font("Tunga", 1, 48)); // NOI18N
        homecoming.setForeground(new java.awt.Color(220, 12, 34));
        homecoming.setText("jLabel4");

        jLabel4.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        jLabel4.setText("Presione uno de los botones de la izquierda para comenzar");

        javax.swing.GroupLayout homeLayout = new javax.swing.GroupLayout(home);
        home.setLayout(homeLayout);
        homeLayout.setHorizontalGroup(
            homeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, homeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(homeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(homecoming, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(homeLayout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 478, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 76, Short.MAX_VALUE)))
                .addContainerGap())
        );
        homeLayout.setVerticalGroup(
            homeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homeLayout.createSequentialGroup()
                .addGap(135, 135, 135)
                .addComponent(homecoming)
                .addGap(34, 34, 34)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(191, Short.MAX_VALUE))
        );

        panelprincipal.add(home, "home");

        consultas.setBackground(new java.awt.Color(255, 255, 255));

        jPanel18.setBackground(new java.awt.Color(255, 255, 255));
        jPanel18.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, true), "Saldo en Cuentas Bancarias", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tw Cen MT", 1, 14))); // NOI18N

        saldocb.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No.Cuenta", "Descripción", "Saldo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane8.setViewportView(saldocb);

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane8)
                .addContainerGap())
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel19.setBackground(new java.awt.Color(255, 255, 255));
        jPanel19.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, true), "Saldo en Tarjetas", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tw Cen MT", 1, 14))); // NOI18N

        saldotj.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No.Tarjeta", "Nombre", "Saldo Actual", "Saldo Disponible", "Límite"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane9.setViewportView(saldotj);

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 584, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout consultasLayout = new javax.swing.GroupLayout(consultas);
        consultas.setLayout(consultasLayout);
        consultasLayout.setHorizontalGroup(
            consultasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(consultasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(consultasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        consultasLayout.setVerticalGroup(
            consultasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(consultasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(55, Short.MAX_VALUE))
        );

        panelprincipal.add(consultas, "consultas");

        javax.swing.GroupLayout master_clientLayout = new javax.swing.GroupLayout(master_client.getContentPane());
        master_client.getContentPane().setLayout(master_clientLayout);
        master_clientLayout.setHorizontalGroup(
            master_clientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(master_clientLayout.createSequentialGroup()
                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelprincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        master_clientLayout.setVerticalGroup(
            master_clientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panelprincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jLabel86.setFont(new java.awt.Font("Tw Cen MT", 3, 24)); // NOI18N
        jLabel86.setText("SOTA Atlantida Reporte");

        jPanel29.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "Datos del Cliente", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tw Cen MT", 1, 14))); // NOI18N

        dcliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Nombre", "ID", "Telefono", "Movil", "Trabajo", "Dirrecion"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane13.setViewportView(dcliente);

        javax.swing.GroupLayout jPanel29Layout = new javax.swing.GroupLayout(jPanel29);
        jPanel29.setLayout(jPanel29Layout);
        jPanel29Layout.setHorizontalGroup(
            jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel29Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane13)
                .addContainerGap())
        );
        jPanel29Layout.setVerticalGroup(
            jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel29Layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        ccliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No.Cuenta", "Descripcion", "Saldo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane14.setViewportView(ccliente);

        jLabel88.setText("Saldo en Cuentas");

        t11.setText("jTextField1");

        jLabel89.setText("Saldo en Tarjetas");

        tablatj123.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Descripcion", "Saldo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane15.setViewportView(tablatj123);

        t12.setText("jTextField1");

        tablacompras.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fecha", "Descripcion", "Monto"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane16.setViewportView(tablacompras);

        t13.setText("jTextField1");

        jLabel90.setText("Compras");

        jButton31.setText("Ver Gráfica");
        jButton31.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton31ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ReporteLayout = new javax.swing.GroupLayout(Reporte.getContentPane());
        Reporte.getContentPane().setLayout(ReporteLayout);
        ReporteLayout.setHorizontalGroup(
            ReporteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ReporteLayout.createSequentialGroup()
                .addGroup(ReporteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ReporteLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel29, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(ReporteLayout.createSequentialGroup()
                        .addGap(223, 223, 223)
                        .addComponent(jLabel86, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(ReporteLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(ReporteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(ReporteLayout.createSequentialGroup()
                                .addComponent(jLabel88)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(t11))
                            .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(ReporteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(ReporteLayout.createSequentialGroup()
                                .addComponent(jLabel89)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(t12))
                            .addComponent(jScrollPane15, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(ReporteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(ReporteLayout.createSequentialGroup()
                                .addComponent(jLabel90)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(t13))
                            .addComponent(jScrollPane16, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jButton31, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)))
                .addContainerGap())
        );
        ReporteLayout.setVerticalGroup(
            ReporteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ReporteLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel86, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel29, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(ReporteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ReporteLayout.createSequentialGroup()
                        .addGroup(ReporteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel88)
                            .addComponent(t11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ReporteLayout.createSequentialGroup()
                        .addGroup(ReporteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel89)
                            .addComponent(t12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane15, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ReporteLayout.createSequentialGroup()
                        .addGroup(ReporteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel90)
                            .addComponent(t13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(ReporteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ReporteLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane16, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(ReporteLayout.createSequentialGroup()
                                .addGap(105, 105, 105)
                                .addComponent(jButton31, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(33, 33, 33))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SOTA Atlantida Login");
        setResizable(false);

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));
        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Iniciar Sesión", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Trebuchet MS", 1, 14))); // NOI18N

        jLabel47.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel47.setText("Username: ");

        tf_user2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0)));

        jLabel48.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel48.setText("Contraseña: ");

        pf_pass2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0)));

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel48)
                    .addComponent(jLabel47))
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pf_pass2, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE)
                    .addComponent(tf_user2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel47)
                    .addComponent(tf_user2, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE))
                .addGap(28, 28, 28)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pf_pass2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel48))
                .addGap(35, 35, 35))
        );

        jPanel11.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Tw Cen MT", 3, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(220, 12, 34));
        jLabel1.setText("SOTA Atlantida");
        jLabel1.setToolTipText("");

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(logo_portada, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addContainerGap(75, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addGap(0, 11, Short.MAX_VALUE)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE)
                    .addComponent(logo_portada, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jPanel12.setBackground(new java.awt.Color(255, 0, 0));

        jButton1.setBackground(new java.awt.Color(250, 0, 0));
        jButton1.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Ingresar");
        jButton1.setBorder(null);
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(101, 101, 101))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel13.setBackground(new java.awt.Color(255, 255, 255));
        jPanel13.setLayout(null);

        jLabel58.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel58.setText("© 2017 Sota Atlantida®; Todos los derechos reservados. ");
        jPanel13.add(jLabel58);
        jLabel58.setBounds(60, 0, 260, 25);

        jLabel59.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel59.setText("Sota Atlantida® es propiedad de SotaGroup Ltd.");
        jPanel13.add(jLabel59);
        jLabel59.setBounds(80, 20, 218, 25);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        master_admin.dispose();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int c = this.cb_cuentas_clientes.getSelectedIndex() - 1;
        Cliente cl = clientes.get(c);
        boolean existe = false;
        for (Cuenta_Bancaria cn : cuentas) {
            if (this.num_cuentabancaria.getText().equals(cn.getNum_cuenta())) {
                existe = true;
            }
        }
        if (existe) {
            JOptionPane.showMessageDialog(nueva_cuenta, "Ese numero de cuenta ya existe", "Advertencia", 0);
        } else {
            if (Double.parseDouble(depositoinicial_cuentabancaria.getText()) < 500) {
                JOptionPane.showMessageDialog(nueva_cuenta, "El deposito inicial debe ser mayor o igual a Lps. 500", "Advertencia", 0);
            } else {
                JOptionPane.showMessageDialog(nueva_cuenta, "POLITICA DEL BANCO: \nSi su cuenta llega a un saldo de Lps. 0\n  se cerrara automaticamente.");
                int condi = JOptionPane.showConfirmDialog(nueva_cuenta, "¿Acepta la condicion anterior?");
                if (condi == JOptionPane.YES_OPTION) {
                    String no = num_cuentabancaria.getText();
                    String dcb = descripcion_cuentabancaria.getText();
                    double d = Double.parseDouble(depositoinicial_cuentabancaria.getText());
                    Date fa = new Date();
                    String cod = cl.getCodigo_cliente();
                    String fe = formato.format(fa);
                    db.conectar();
                    try {
                        db.query.execute("INSERT INTO cuentas"
                                + " (ncuenta,descripcion,saldo,creacion,codcliente)"
                                + " VALUES('" + no + "','" + dcb + "'," + d + ",'" + fe + "','" + cod + "')");
                        db.commit();
                    } catch (SQLException ex) {
                        ex.printStackTrace();
                    }
                    db.desconectar();
                    cargarClientes();
                    num_cuentabancaria.setText("");
                    descripcion_cuentabancaria.setText("");
                    depositoinicial_cuentabancaria.setText("");
                    JOptionPane.showMessageDialog(nueva_cuenta, "¡Cuenta agregada con exito!");
                    int temp = cb_cuentas_clientes.getSelectedIndex();
                    actualizarCombo();
                    cb_cuentas_clientes.setSelectedIndex(temp);
                    DefaultTableModel m = (DefaultTableModel) tabla_cuentasclientes.getModel();
                    Cuenta_Bancaria b = cuentas.get(cuentas.size() - 1);
                    Object[] fila = {b.getNum_cuenta(), b.getDescripcion(), b.getSaldo(), formato.format(b.getFecha_creacion())};
                    //m.addRow(fila);
                    tabla_cuentasclientes.setModel(m);
                    nueva_cuenta.dispose();
                } else {
                    JOptionPane.showMessageDialog(nueva_cuenta, "Operacion cancelada");
                    num_cuentabancaria.setText("");
                    descripcion_cuentabancaria.setText("");
                    depositoinicial_cuentabancaria.setText("");
                }
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        boolean existe = false;
        for (Tipo_Tarjeta t : tipos) {
            if (codigo_tipotarjeta.getText().equals(t.getCodigo())) {
                existe = true;
            }
        }
        if (existe) {
            JOptionPane.showMessageDialog(nuevo_tipo, "Ese codigo de tarjeta ya existe", "ERROR", 0);
        } else if (codigo_tipotarjeta.getText().equals("") || descripcion_tipotarjeta.getText().equals("") || limite_tipotarjeta.getText().equals("")) {
            JOptionPane.showMessageDialog(nuevo_tipo, "No puede dejar campos vacios", "ERROR", 0);
        } else {
            contador_beneficiostarjeta.setText("0");
            String ct = codigo_tipotarjeta.getText();
            String ds = descripcion_tipotarjeta.getText();
            double lim = Double.parseDouble(limite_tipotarjeta.getText());
            String benes = "";
            for (int i = 0; i < beneficios.size(); i++) {
                if (i == (beneficios.size() - 1)) {
                    benes += beneficios.get(i);
                } else {
                    benes += beneficios.get(i) + ",";
                }
            }
            db.conectar();
            try {
                db.query.execute("INSERT INTO tipos"
                        + " (codigo,descripcion,limite,beneficios)"
                        + " VALUES('" + ct + "','" + ds + "'," + lim + ",'" + benes + "')");
                db.commit();
            } catch (Exception e) {
                e.printStackTrace();
            }
            db.desconectar();
            cargarClientes();
            beneficios = new ArrayList();
            JOptionPane.showMessageDialog(nuevo_tipo, "Tipo de Tarjeta creado con exito");
            DefaultTableModel m = (DefaultTableModel) tabla_tipotarjeta.getModel();
            Object[] fila = {codigo_tipotarjeta.getText(), descripcion_tipotarjeta.getText(), Double.parseDouble(limite_tipotarjeta.getText())};
            m.addRow(fila);
            nuevo_tipo.dispose();
            codigo_tipotarjeta.setText("");
            descripcion_tipotarjeta.setText("");
            limite_tipotarjeta.setText("");
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        int cont = Integer.parseInt(contador_beneficiostarjeta.getText());
        String benef = JOptionPane.showInputDialog(nuevo_tipo, "Introduzca el beneficio de la tarjeta: ", "Nuevo Beneficio");
        beneficios.add(benef);
        cont++;
        contador_beneficiostarjeta.setText(cont + "");
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        boolean existe = false;
        for (Tarjeta t : tarjetas) {
            if (t.getNumero().equals(no_tarjeta.getText())) {
                existe = true;
            }
        }
        if (existe) {
            JOptionPane.showMessageDialog(nueva_tarjeta, "Ese numero no esta disponible", "ERROR", 0);
        } else {
            try {
                int ind = cb_cuentas_clientes1.getSelectedIndex() - 1;
                Cliente c = (Cliente) this.cb_cuentas_clientes1.getSelectedItem();
                Tipo_Tarjeta x = (Tipo_Tarjeta) cb_tt.getSelectedItem();
                db.conectar();
                try {
                    String no = no_tarjeta.getText();
                    String name = c.getNombre();
                    String des = descripcion_tarjeta.getText();
                    double lim = Double.parseDouble(limite_tarjeta.getText());
                    double sal = Double.parseDouble(saldo_tarjeta.getText());
                    String cod = codseguridad_tarjeta.getText();
                    double tas = Double.parseDouble(tasa_tarjeta.getText());
                    String corte = formato.format(fechacorte.getDate());
                    String emision = formato.format(new Date());
                    db.query.execute("INSERT INTO tarjetas"
                            + " VALUES('" + no + "','" + name + "','" + des + "'," + lim + "," + sal + "," + sal + ",'" + cod + "'," + tas + ",'" + corte + "','" + emision + "','" + c.getCodigo_cliente() + "','" + x.getCodigo() + "')");
                    db.commit();
                    JOptionPane.showMessageDialog(master_admin, "Tarjeta agregada exitosamente");
                    nueva_tarjeta.dispose();
                    no_tarjeta.setText("");
                    descripcion_tarjeta.setText("");
                    limite_tarjeta.setText("");
                    saldo_tarjeta.setText("");
                    codseguridad_tarjeta.setText("");
                    tasa_tarjeta.setText("");
                    fechacorte.setDate(new Date());
                } catch (Exception e) {
                    e.printStackTrace();
                }
                db.desconectar();
                DefaultTableModel m = (DefaultTableModel) tabla_tarjetas.getModel();
                while (m.getRowCount() != 0) {
                    m.removeRow(0);
                }
                for (Tarjeta o : clientes.get(ind).getTarjetas()) {
                    Object[] fila = {o.getNumero(), o.getDescripcion(), o.getLimite(), o.getSaldo_actual(), o.getSaldo_disponible(), o.getCodigo_seguridad(), o.getTasa_interes_mensual(), o.getFecha_emision(), o.getFecha_corte(), o.getTipo()};
                    m.addRow(fila);
                }
                tabla_tarjetas.setModel(m);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(master_admin, "Ocurrió un error en algun dato ingresado");
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton10ActionPerformed

    private void cb_ttItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cb_ttItemStateChanged
        if (cb_tt.getSelectedIndex() != 0) {
            Tipo_Tarjeta t = (Tipo_Tarjeta) cb_tt.getSelectedItem();
            DefaultTableModel m = (DefaultTableModel) tabla_tt2.getModel();
            while (m.getRowCount() != 0) {
                m.removeRow(0);
            }
            Object[] fila = {t.getCodigo(), t.getLimite_maximo()};
            m.addRow(fila);
            tabla_tt2.setModel(m);
        }
    }//GEN-LAST:event_cb_ttItemStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        boolean eu = false;
        boolean ep = false;
        int x = -1;
        for (int i = 0; i < clientes.size(); i++) {
            if (clientes.get(i).getUsername().equals(tf_user2.getText())) {
                eu = true;
                x = i;
            }
        }
        if (x != -1) {
            if (clientes.get(x).getPassword().equals(crypt(crypt(pf_pass2.getText())))) {
                ep = true;
            }
        }
        if (eu && ep) {
            tf_user2.setText("");
            pf_pass2.setText("");
            logged = clientes.get(x);
            rcb();
            homecoming.setText("Bienvenido, " + logged.getNombre());
            nombre1.setText(logged.getNombre());
            CardLayout card = (CardLayout) panelprincipal.getLayout();
            card.show(panelprincipal, "home");
            master_client.setModal(true);
            master_client.pack();
            master_client.setLocationRelativeTo(this);
            master_client.setVisible(true);
        } else if (tf_user2.getText().equals("sota2017") && pf_pass2.getText().equals("se17")) {
            tf_user2.setText("");
            pf_pass2.setText("");
            //master_admin.setModal(true);
            master_admin.pack();
            master_admin.setLocationRelativeTo(this);
            master_admin.setVisible(true);
        } else if (tf_user2.getText().equals("") && pf_pass2.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Por favor, no deje campos vacios", "ERROR", 0);
            tf_user2.setText("");
            pf_pass2.setText("");
        } else if (eu && ep == false) {
            JOptionPane.showMessageDialog(this, "Contraseña incorrecta", "ERROR", 0);
        } else {
            JOptionPane.showMessageDialog(this, "Usuario no registrado", "ERROR", 0);
            tf_user2.setText("");
            pf_pass2.setText("");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton21ActionPerformed
        master_client.dispose();
        cb1.setModel(new DefaultComboBoxModel());
        cb2.setModel(new DefaultComboBoxModel());
        cb3.setModel(new DefaultComboBoxModel());
    }//GEN-LAST:event_jButton21ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        CardLayout card = (CardLayout) panelprincipal.getLayout();
        card.show(panelprincipal, "hacerdeposito");
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        cargarTiendas();
        DefaultComboBoxModel m = new DefaultComboBoxModel();
        cbtj.setModel(m);
        m.addElement("<Tarjetas>");
        for (Tarjeta jeta : logged.getTarjetas()) {
            m.addElement(jeta);
        }
        cbtj.setModel(m);
        CardLayout card = (CardLayout) panelprincipal.getLayout();
        card.show(panelprincipal, "hacercompra");
    }//GEN-LAST:event_jButton17ActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        DefaultComboBoxModel m = (DefaultComboBoxModel) cbtj98.getModel();
        m.removeAllElements();
        m.addElement("<Tarjetas>");
        for (Tarjeta jeta : logged.getTarjetas()) {
            m.addElement(jeta);
        }
        cbtj98.setModel(m);
        DefaultComboBoxModel n = (DefaultComboBoxModel) cbcnts.getModel();

        n.removeAllElements();
        n.addElement("<Cuentas>");
        for (Cuenta_Bancaria enta : logged.getCuentas()) {
            n.addElement(enta);
        }
        cbcnts.setModel(n);
        CardLayout card = (CardLayout) panelprincipal.getLayout();
        card.show(panelprincipal, "pagartarjetas");
    }//GEN-LAST:event_jButton18ActionPerformed

    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
        DefaultComboBoxModel m = (DefaultComboBoxModel) tj2.getModel();
        m.removeAllElements();
        m.addElement("<Tarjetas>");
        for (Tarjeta jeta : logged.getTarjetas()) {
            m.addElement(jeta);
        }
        tj2.setModel(m);
        cargarEstados();
        cargarDetalle();
        CardLayout card = (CardLayout) panelprincipal.getLayout();
        card.show(panelprincipal, "estados");
    }//GEN-LAST:event_jButton19ActionPerformed

    private void jButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20ActionPerformed
        DefaultTableModel m = (DefaultTableModel) saldocb.getModel();
        DefaultTableModel n = (DefaultTableModel) saldotj.getModel();
        while (m.getRowCount() != 0) {
            m.removeRow(0);
        }
        while (n.getRowCount() != 0) {
            n.removeRow(0);
        }
        for (Cuenta_Bancaria beca : logged.getCuentas()) {
            Object[] fila = {beca.getNum_cuenta(), beca.getDescripcion(), beca.getSaldo()};
            m.addRow(fila);
        }
        for (Tarjeta teca : logged.getTarjetas()) {
            Object[] fila = {teca.getNumero(), teca.getNombre(), teca.getSaldo_actual(), teca.getSaldo_disponible(), teca.getLimite()};
            n.addRow(fila);
        }
        saldocb.setModel(m);
        saldotj.setModel(n);
        CardLayout card = (CardLayout) panelprincipal.getLayout();
        card.show(panelprincipal, "consultas");
    }//GEN-LAST:event_jButton20ActionPerformed

    private void cb1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cb1ItemStateChanged
        if (cb1.getSelectedIndex() != 0) {
            Cuenta_Bancaria hola = (Cuenta_Bancaria) cb1.getSelectedItem();
            dc1.setText(hola.getDescripcion());
            sa1.setText(hola.getSaldo() + "");
        } else {
            dc1.setText("");
            sa1.setText("");
            dp1.setText("0.00");
        }
    }//GEN-LAST:event_cb1ItemStateChanged

    private void cb2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cb2ItemStateChanged
        if (cb2.getSelectedIndex() != 0) {
            Cuenta_Bancaria hola = (Cuenta_Bancaria) cb2.getSelectedItem();
            dc2.setText(hola.getDescripcion());
            sa2.setText(hola.getSaldo() + "");
        } else {
            dc2.setText("");
            sa2.setText("");
        }
    }//GEN-LAST:event_cb2ItemStateChanged

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        if (cb1.getSelectedIndex() == 0 || cb2.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(master_client, "Por favor, seleccione una cuenta", "ERROR", 0);
        } else {
            Cuenta_Bancaria uno = (Cuenta_Bancaria) cb1.getSelectedItem();
            Cuenta_Bancaria dos = (Cuenta_Bancaria) cb2.getSelectedItem();
            double monto = Double.parseDouble(dp1.getText());
            if (uno.getNum_cuenta().equals(dos.getNum_cuenta())) {
                JOptionPane.showMessageDialog(master_client, "No se puede depositar a la misma cuenta", "ERROR", 0);
            } else if (uno.getSaldo() - monto < 0) {
                JOptionPane.showMessageDialog(master_client, "No dispone esa cantidad de dinero en la cuenta", "ERROR", 0);
            } else if (uno.getSaldo() - monto == 0) {
                int decision2 = JOptionPane.showConfirmDialog(master_admin, "Al hacer ese retiro, su cuenta quedara en Lps.0\nPor politica del banco, esa cuenta se cerrara.\n¿Desea continuar?");
                if (decision2 == JOptionPane.YES_OPTION) {
                    double ns = dos.getSaldo() + monto;
                    db.conectar();
                    try {
                        db.query.execute("update cuentas set saldo = " + ns + " where ncuenta = '" + dos.getNum_cuenta() + "'");
                        db.query.execute("delete from cuentas where ncuenta = '" + uno.getNum_cuenta() + "'");
                        db.commit();
                        JOptionPane.showMessageDialog(master_client, "Deposito realizado exitosamente");
                        dp1.setText("0.00");
                        dc1.setText("");
                        dc2.setText("");
                        sa1.setText("");
                        sa2.setText("");
                        cb1.setSelectedIndex(0);
                        cb2.setSelectedIndex(0);
                    } catch (Exception e) {
                        e.printStackTrace();
                    }
                    db.desconectar();
                    cargarClientes();
                    rcb();
                }
            } else {
                double ns = dos.getSaldo() + monto;
                double ms = uno.getSaldo() - monto;
                db.conectar();
                try {
                    db.query.execute("update cuentas set saldo = " + ns + " where ncuenta = '" + dos.getNum_cuenta() + "'");
                    db.query.execute("update cuentas set saldo = " + ms + " where ncuenta = '" + uno.getNum_cuenta() + "'");
                    db.commit();
                    JOptionPane.showMessageDialog(master_client, "Deposito realizado exitosamente");
                } catch (Exception e) {
                    e.printStackTrace();
                }
                db.desconectar();
                cargarClientes();
            }
        }
    }//GEN-LAST:event_jButton12ActionPerformed

    private void cb3ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cb3ItemStateChanged
        if (cb3.getSelectedIndex() != 0) {
            Cuenta_Bancaria alola = (Cuenta_Bancaria) cb3.getSelectedItem();
            dc3.setText(alola.getDescripcion());
            sa3.setText(alola.getSaldo() + "");
        } else {
            dc3.setText("");
            dp2.setText("0.00");
            sa3.setText("");
        }
    }//GEN-LAST:event_cb3ItemStateChanged

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        boolean existe = false;
        Cuenta_Bancaria destiny = new Cuenta_Bancaria();
        if (cb3.getSelectedIndex() != 0) {
            Cuenta_Bancaria hallo = (Cuenta_Bancaria) cb3.getSelectedItem();
            double dp11 = Double.parseDouble(dp2.getText());
            if (destinatario.getText().equals("")) {
                JOptionPane.showMessageDialog(master_client, "Por favor, ingrese una cuenta destinataria", "ERROR", 0);
            } else if (hallo.getSaldo() - dp11 < 0) {
                JOptionPane.showMessageDialog(master_client, "Esa cuenta no dispone suficietes fondos", "ERROR", 0);
            } else if (hallo.getSaldo() - dp11 == 0) {
                int decision3 = JOptionPane.showConfirmDialog(master_admin, "Al hacer ese retiro, su cuenta quedara en Lps.0\nPor politica del banco, esa cuenta se cerrara.\n¿Desea continuar?");
                if (decision3 == JOptionPane.YES_OPTION) {
                    for (Cuenta_Bancaria pika : cuentas) {
                        if (pika.getNum_cuenta().equals(destinatario.getText())) {
                            existe = true;
                            destiny = pika;
                        }
                    }
                    if (existe) {
                        String prenom = "";
                        Cliente ugh;
                        for (Cliente charmander : clientes) {
                            if (charmander.getCodigo_cliente().equals(destiny.getCod_cliente())) {
                                prenom = charmander.getNombre();
                            }
                        }
                        int decision2 = JOptionPane.showConfirmDialog(master_admin, "Hara un deposito a la cuenta #" + destiny.getNum_cuenta() + ""
                                + "\nDueño de la cuenta: " + prenom + "\n¿Desea continuar?");
                        if (decision2 == JOptionPane.YES_OPTION) {
                            db.conectar();
                            double ns = destiny.getSaldo() + dp11;
                            try {
                                db.query.execute("update cuentas set saldo = " + ns + " where ncuenta = '" + destiny.getNum_cuenta() + "'");
                                db.query.execute("delete from cuentas where ncuenta = '" + hallo.getNum_cuenta() + "'");
                                db.commit();
                                JOptionPane.showMessageDialog(master_client, "Deposito realizado con exito");
                                cargarClientes();
                                rcb();
                                destinatario.setText("");
                            } catch (Exception e) {
                                e.printStackTrace();
                            }
                            db.desconectar();
                        }
                    } else {
                        JOptionPane.showMessageDialog(master_client, "Ese numero de cuenta no esta en nuestro sistema", "ERROR", 0);
                    }
                }
            } else {
                for (Cuenta_Bancaria pika : cuentas) {
                    if (pika.getNum_cuenta().equals(destinatario.getText())) {
                        existe = true;
                        destiny = pika;
                    }
                }
                if (existe) {
                    String prenom = "";
                    for (Cliente charmander : clientes) {
                        if (charmander.getCodigo_cliente().equals(destiny.getCod_cliente())) {
                            prenom = charmander.getNombre();
                        }
                    }
                    int decision2 = JOptionPane.showConfirmDialog(master_admin, "Hara un deposito a la cuenta #" + destiny.getNum_cuenta() + ""
                            + "\nDueño de la cuenta: " + prenom + "\n¿Desea continuar?");
                    if (decision2 == JOptionPane.YES_OPTION) {
                        db.conectar();
                        double ns = destiny.getSaldo() + dp11;
                        double ms = hallo.getSaldo() - dp11;
                        try {
                            db.query.execute("update cuentas set saldo = " + ns + " where ncuenta = '" + destiny.getNum_cuenta() + "'");
                            db.query.execute("update cuentas set saldo = " + ms + " where ncuenta = '" + hallo.getNum_cuenta() + "'");
                            db.commit();
                            JOptionPane.showMessageDialog(master_client, "Deposito realizado con exito");
                            cargarClientes();
                            rcb();
                            destinatario.setText("");
                        } catch (Exception e) {
                            e.printStackTrace();
                        }
                        db.desconectar();
                    }
                } else {
                    JOptionPane.showMessageDialog(master_client, "Ese numero de cuenta no esta en nuestro sistema", "ERROR", 0);
                }
            }
        } else {
            JOptionPane.showMessageDialog(master_client, "Por favor, seleccione una de sus cuentas", "ERROR", 0);
        }
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1StateChanged
        cargarClientes();
        if (jTabbedPane1.getSelectedIndex() < 10) {
            DefaultTableModel m = (DefaultTableModel) tabla_clientes.getModel();
            while (tabla_clientes.getRowCount() != 0) {
                m.removeRow(0);
            }
            for (int i = 0; i < clientes.size(); i++) {
                Cliente c = clientes.get(i);
                Object[] fila = {c.getCodigo_cliente(), c.getNombre(), c.getIdentidad(), c.getTelefono_fijo(),
                    c.getTelefono_celular(), c.getTrabajo(), c.getDireccion(), c.getUsername(), c.getPassword()
                };
                m.addRow(fila);
            }
            DefaultTableModel x = (DefaultTableModel) tabla_beneficios.getModel();
            while (x.getRowCount() != 0) {
                x.removeRow(0);
            }
            tabla_beneficios.setModel(x);
            actualizarCombo();
            actualizarGralCuentas();
            actualizarTipos();
            actualizarComboTipos();
            tabla_clientes.setModel(m);
        }
    }//GEN-LAST:event_jTabbedPane1StateChanged

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        int ind = tabla_clientes.getSelectedRow();
        if (ind != -1) {
            String msg = "Esta apunto de borrar a " + clientes.get(ind).getNombre() + "\nEsto lo borrara completamente del sistema.\n¿Desea continuar?";
            int confirmacion = JOptionPane.showConfirmDialog(master_admin, msg, "Confirmacion", 1);
            if (confirmacion == JOptionPane.YES_OPTION) {
                DefaultTableModel m = (DefaultTableModel) tabla_clientes.getModel();
                m.removeRow(ind);
                Cliente c = clientes.get(ind);
                db.conectar();
                try {
                    db.query.execute("delete from clientes where id = '" + c.getIdentidad() + "'");
                    db.query.execute("delete from cuentas where codcliente = '" + c.getCodigo_cliente() + "'");
                    db.commit();
                } catch (Exception e) {
                    e.printStackTrace();
                }

                db.desconectar();
                for (int i = 0; i < cuentas.size(); i++) {
                    Cuenta_Bancaria b = cuentas.get(i);
                    if (b.getCod_cliente().equals(c.getCodigo_cliente())) {
                        cuentas.remove(i);
                    }
                }
                clientes.remove(ind);
                cargarClientes();
                tabla_clientes.setModel(m);
                JOptionPane.showMessageDialog(master_admin, "Eliminado exitosamente");
            } else {
            }
        } else {
            JOptionPane.showMessageDialog(master_admin, "Posicion no valida para eliminar", "Error", 0);
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void bt_eliminarcuenta1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_eliminarcuenta1ActionPerformed
        int ind = tabla_tipotarjeta.getSelectedRow();
        if (ind != -1) {
            Tipo_Tarjeta tt = tipos.get(ind);
            db.conectar();
            try {
                db.query.execute("delete from tipos where codigo = '" + tt.getCodigo() + "'");
                db.commit();
                DefaultTableModel x = (DefaultTableModel) tabla_tipotarjeta.getModel();
                x.removeRow(ind);
            } catch (Exception e) {
                e.printStackTrace();
            }
            db.desconectar();
            cargarClientes();
            DefaultTableModel m = (DefaultTableModel) tabla_beneficios.getModel();
            while (m.getRowCount() != 0) {
                m.removeRow(0);
            }
            tabla_beneficios.setModel(m);
            JOptionPane.showMessageDialog(master_admin, "¡Tipo de Tarjeta Eliminado!");
        } else {
            JOptionPane.showMessageDialog(master_admin, "Por favor, elija una fila de la tabla", "ERROR", 0);
        }
    }//GEN-LAST:event_bt_eliminarcuenta1ActionPerformed

    private void bt_agregarcuenta1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_agregarcuenta1ActionPerformed
        nuevo_tipo.setModal(true);
        nuevo_tipo.pack();
        nuevo_tipo.setLocationRelativeTo(this);
        nuevo_tipo.setVisible(true);
    }//GEN-LAST:event_bt_agregarcuenta1ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        int ind = tabla_tipotarjeta.getSelectedRow();
        if (ind != -1) {
            Tipo_Tarjeta temp = tipos.get(ind);
            DefaultTableModel m = (DefaultTableModel) tabla_beneficios.getModel();
            while (m.getRowCount() != 0) {
                m.removeRow(0);
            }
            for (String beneficio : temp.getBeneficios()) {
                Object[] fila = {beneficio};
                m.addRow(fila);
            }
            tabla_beneficios.setModel(m);
        } else {
            JOptionPane.showMessageDialog(master_admin, "Por favor, elija una fila de la tabla de tipos", "ERROR", 0);
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void bt_eliminarcuenta2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_eliminarcuenta2ActionPerformed
        if (tabla_tarjetas.getSelectedRow() != -1) {
            int ind = cb_cuentas_clientes1.getSelectedIndex() - 1;
            Tarjeta t = clientes.get(ind).getTarjetas().get(tabla_tarjetas.getSelectedRow());
            db.conectar();
            try {
                db.query.execute("delete from tarjetas where numero = '" + t.getNumero() + "'");
                db.commit();
                JOptionPane.showMessageDialog(master_admin, "Tarjeta Eliminada");
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
            db.desconectar();
            cargarClientes();
        } else {
            JOptionPane.showMessageDialog(master_admin, "Por favor, seleccione una fila valida", "ERROR", 0);
        }
    }//GEN-LAST:event_bt_eliminarcuenta2ActionPerformed

    private void bt_agregarcuenta2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_agregarcuenta2ActionPerformed
        if (cb_cuentas_clientes1.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(master_admin, "Por favor, seleccione un cliente primero", "ERROR", 0);
        } else {
            nueva_tarjeta.setModal(true);
            nueva_tarjeta.pack();
            nueva_tarjeta.setLocationRelativeTo(master_admin);
            nueva_tarjeta.setVisible(true);
        }
    }//GEN-LAST:event_bt_agregarcuenta2ActionPerformed

    private void cb_cuentas_clientes1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cb_cuentas_clientes1ItemStateChanged
        if (cb_cuentas_clientes1.getSelectedIndex() > 0) {
            Cliente c = clientes.get(cb_cuentas_clientes1.getSelectedIndex() - 1);
            tf_cc2.setText(c.getCodigo_cliente());
            DefaultTableModel m = (DefaultTableModel) tabla_tarjetas.getModel();
            while (m.getRowCount() != 0) {
                m.removeRow(0);
            }
            for (Tarjeta t : c.getTarjetas()) {
                Object[] fila = {t.getNumero(), t.getDescripcion(), t.getLimite(), t.getSaldo_actual(), t.getSaldo_disponible(), t.getCodigo_seguridad(), t.getTasa_interes_mensual(), formato.format(t.getFecha_emision()), formato.format(t.getFecha_corte()), t.getTipo()};
                m.addRow(fila);
            }
            tabla_tarjetas.setModel(m);
        } else {
            tf_cc2.setText("");
            DefaultTableModel m = (DefaultTableModel) tabla_tarjetas.getModel();
            while (m.getRowCount() != 0) {
                m.removeRow(0);
            }
            tabla_tarjetas.setModel(m);
        }
    }//GEN-LAST:event_cb_cuentas_clientes1ItemStateChanged

    private void bt_eliminarcuentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_eliminarcuentaActionPerformed
        int ind = tabla_cuentasclientes.getSelectedRow();
        if (ind != -1) {
            cargarClientes();
            DefaultTableModel m = (DefaultTableModel) tabla_cuentasclientes.getModel();
            int ind2 = cb_cuentas_clientes.getSelectedIndex() - 1;
            Cliente tempo = clientes.get(ind2);
            String t = clientes.get(ind2).getCuentas().get(ind).getNum_cuenta();
            for (int i = 0; i < cuentas.size(); i++) {
                Cuenta_Bancaria b = cuentas.get(i);
                if (b.getNum_cuenta().equals(t)) {
                    cuentas.remove(i);
                }
            }
            db.conectar();
            try {
                db.query.execute("delete from cuentas where ncuenta = '" + t + "'");
                db.commit();
            } catch (Exception e) {
                e.printStackTrace();
            }
            db.desconectar();
            m.removeRow(ind);
            clientes.get(ind2).getCuentas().remove(ind);
            int temp = cb_cuentas_clientes.getSelectedIndex();
            actualizarCombo();
            cb_cuentas_clientes.setSelectedIndex(temp);
            JOptionPane.showMessageDialog(master_admin, "Cuenta eliminada");
            cargarClientes();
        } else {
            JOptionPane.showMessageDialog(master_admin, "Por favor, seleccione una fila de la tabla para hacer esta accion", "ERROR", 0);
        }
    }//GEN-LAST:event_bt_eliminarcuentaActionPerformed

    private void depoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_depoActionPerformed
        cargarClientes();
        int ind = tabla_cuentasclientes.getSelectedRow();
        if (ind != -1) {
            try {
                int ind2 = cb_cuentas_clientes.getSelectedIndex() - 1;
                double deposito = Double.parseDouble(JOptionPane.showInputDialog(master_admin, "Ingrese el monto del deposito en Lps: "));
                int decision = JOptionPane.showConfirmDialog(master_admin, "CONFIRMACIÓN DE DEPOSITO:\n No.Cuenta: " + clientes.get(ind2).getCuentas().get(ind).getNum_cuenta()
                        + "\n Descripcion: " + clientes.get(ind2).getCuentas().get(ind).getDescripcion() + "\n Deposito (Lps.): " + deposito);
                if (decision == JOptionPane.YES_OPTION) {
                    DefaultTableModel m = (DefaultTableModel) tabla_cuentasclientes.getModel();
                    double tempo = clientes.get(ind2).getCuentas().get(ind).getSaldo();
                    clientes.get(ind2).getCuentas().get(ind).setSaldo(deposito + tempo);
                    String t = clientes.get(ind2).getCuentas().get(ind).getNum_cuenta();
                    for (Cuenta_Bancaria x : cuentas) {
                        int indx = cuentas.indexOf(x);
                        if (t.equals(x.getNum_cuenta())) {
                            cuentas.get(indx).setSaldo(tempo + deposito);
                        }
                    }
                    db.conectar();
                    try {
                        db.query.execute("update cuentas " + "set saldo = " + (tempo + deposito) + " where ncuenta = '" + t + "'");
                        db.commit();
                    } catch (Exception e) {
                        e.printStackTrace();
                    }
                    db.desconectar();
                    while (m.getRowCount() != 0) {
                        m.removeRow(0);
                    }
                    for (Cuenta_Bancaria cnt : clientes.get(ind2).getCuentas()) {
                        Object[] fila = {cnt.getNum_cuenta(), cnt.getDescripcion(), cnt.getSaldo(), formato.format(cnt.getFecha_creacion())};
                        m.addRow(fila);
                    }
                    tabla_cuentasclientes.setModel(m);
                    JOptionPane.showMessageDialog(master_admin, "Deposito realizado con éxito");
                    int temp = cb_cuentas_clientes.getSelectedIndex();
                    actualizarCombo();
                    cb_cuentas_clientes.setSelectedIndex(temp);
                } else {
                    JOptionPane.showMessageDialog(master_admin, "Deposito Cancelado");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(master_admin, "ERROR EN EL DATO INGRESADO", "ERROR GRAVE", 0);
            }
        } else {
            JOptionPane.showMessageDialog(master_admin, "Por favor, seleccione una fila de la tabla para hacer esta accion", "ERROR", 0);
        }
    }//GEN-LAST:event_depoActionPerformed

    private void retiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retiActionPerformed
        int ind = tabla_cuentasclientes.getSelectedRow();
        if (ind != -1) {
            try {
                int ind2 = cb_cuentas_clientes.getSelectedIndex() - 1;
                double retiro = Double.parseDouble(JOptionPane.showInputDialog(master_admin, "Ingrese el monto a retirar en Lps: "));
                int decision = JOptionPane.showConfirmDialog(master_admin, "CONFIRMACIÓN DE RETIRO:\n No.Cuenta: " + clientes.get(ind2).getCuentas().get(ind).getNum_cuenta()
                        + "\n Descripcion: " + clientes.get(ind2).getCuentas().get(ind).getDescripcion() + "\n Retiro (Lps.): " + retiro);
                if (decision == JOptionPane.YES_OPTION) {
                    double tempo = clientes.get(ind2).getCuentas().get(ind).getSaldo();
                    if (tempo - retiro < 0) {
                        JOptionPane.showMessageDialog(master_admin, "Esa cuenta no dispone de esa cantidad\nde dinero.");
                    } else if (tempo - retiro == 0) {
                        int decision2 = JOptionPane.showConfirmDialog(master_admin, "Al hacer ese retiro, su cuenta quedara en Lps.0\nPor politica del banco, esa cuenta se cerrara.\n¿Desea continuar?");
                        if (decision2 == JOptionPane.YES_OPTION) {
                            DefaultTableModel m = (DefaultTableModel) tabla_cuentasclientes.getModel();
                            clientes.get(ind2).getCuentas().get(ind).setSaldo(tempo - retiro);
                            String t = clientes.get(ind2).getCuentas().get(ind).getNum_cuenta();
                            for (int i = 0; i < cuentas.size(); i++) {
                                Cuenta_Bancaria b = cuentas.get(i);
                                if (b.getNum_cuenta().equals(t)) {
                                    cuentas.remove(i);
                                }
                            }
                            clientes.get(ind2).getCuentas().remove(ind);
                            db.conectar();
                            try {
                                db.query.execute("delete from cuentas where ncuenta = '" + t + "'");
                                db.commit();
                            } catch (Exception e) {
                                e.printStackTrace();
                            }
                            db.desconectar();
                            while (m.getRowCount() != 0) {
                                m.removeRow(0);
                            }
                            for (Cuenta_Bancaria cnt : clientes.get(ind2).getCuentas()) {
                                Object[] fila = {cnt.getNum_cuenta(), cnt.getDescripcion(), cnt.getSaldo(), formato.format(cnt.getFecha_creacion())};
                                m.addRow(fila);
                            }
                            tabla_cuentasclientes.setModel(m);
                            JOptionPane.showMessageDialog(master_admin, "Retiro realizado con éxito");
                        }
                    } else {
                        DefaultTableModel m = (DefaultTableModel) tabla_cuentasclientes.getModel();
                        clientes.get(ind2).getCuentas().get(ind).setSaldo(tempo - retiro);
                        String t = clientes.get(ind2).getCuentas().get(ind).getNum_cuenta();
                        for (Cuenta_Bancaria x : cuentas) {
                            int indx = cuentas.indexOf(x);
                            if (t.equals(x.getNum_cuenta())) {
                                cuentas.get(indx).setSaldo(tempo - retiro);
                            }
                        }
                        db.conectar();
                        try {
                            db.query.execute("update cuentas " + "set saldo = " + (tempo - retiro) + " where ncuenta = '" + t + "'");
                            db.commit();
                        } catch (Exception e) {
                            e.printStackTrace();
                        }
                        db.desconectar();
                        while (m.getRowCount() != 0) {
                            m.removeRow(0);
                        }
                        for (Cuenta_Bancaria cnt : clientes.get(ind2).getCuentas()) {
                            Object[] fila = {cnt.getNum_cuenta(), cnt.getDescripcion(), cnt.getSaldo(), formato.format(cnt.getFecha_creacion())};
                            m.addRow(fila);
                        }
                        tabla_cuentasclientes.setModel(m);
                        JOptionPane.showMessageDialog(master_admin, "Retiro realizado con éxito");
                    }
                    int temp = cb_cuentas_clientes.getSelectedIndex();
                    actualizarCombo();
                    cb_cuentas_clientes.setSelectedIndex(temp);
                } else {
                    JOptionPane.showMessageDialog(master_admin, "Retiro Cancelado");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(master_admin, "ERROR EN EL DATO INGRESADO", "ERROR GRAVE", 0);
                e.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(master_admin, "Por favor, seleccione una fila de la tabla para hacer esta accion", "ERROR", 0);
        }
    }//GEN-LAST:event_retiActionPerformed

    private void bt_agregarcuentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_agregarcuentaActionPerformed
        if (cb_cuentas_clientes.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(master_admin, "Por favor, seleccione un cliente primero.", "ERROR", 0);
        } else {
            nueva_cuenta.setModal(true);
            nueva_cuenta.pack();
            nueva_cuenta.setLocationRelativeTo(master_admin);
            nueva_cuenta.setVisible(true);
        }
    }//GEN-LAST:event_bt_agregarcuentaActionPerformed

    private void cb_cuentas_clientesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cb_cuentas_clientesItemStateChanged
        DefaultTableModel m = (DefaultTableModel) tabla_cuentasclientes.getModel();
        if (cb_cuentas_clientes.getSelectedIndex() == 0) {
            while (m.getRowCount() != 0) {
                m.removeRow(0);
            }
            tabla_cuentasclientes.setModel(m);
            tf_cc1.setText("");
        } else if (cb_cuentas_clientes.getSelectedIndex() > 0) {
            Cliente c = (Cliente) cb_cuentas_clientes.getSelectedItem();
            tf_cc1.setText(c.getCodigo_cliente());
            while (m.getRowCount() != 0) {
                m.removeRow(0);
            }
            for (Cuenta_Bancaria cnt : c.getCuentas()) {
                Object[] fila = {cnt.getNum_cuenta(), cnt.getDescripcion(), cnt.getSaldo(), formato.format(cnt.getFecha_creacion())};
                m.addRow(fila);
            }
            tabla_cuentasclientes.setModel(m);
        }
    }//GEN-LAST:event_cb_cuentas_clientesItemStateChanged

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        cod_cliente.setText("");
        nombre_cliente.setText("");
        id_cliente.setText("");
        fijo_cliente.setText("");
        celular_cliente.setText("");
        trabajo_cliente.setText("");
        direccion_cliente.setText("");
        user_cliente.setText("");
        contra_cliente.setText("");
        cc_cliente.setText("");
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if (cod_cliente.getText().equals("") || nombre_cliente.getText().equals("") || id_cliente.getText().equals("")
                || trabajo_cliente.getText().equals("") || direccion_cliente.getText().equals("") || user_cliente.getText().equals("")
                || contra_cliente.getText().equals("") || cc_cliente.getText().equals("")) {
            JOptionPane.showMessageDialog(master_admin, "¡Los campos con '*' no pueden estar vacíos!", "Advertencia", 0);

        } else if (!contra_cliente.getText().equals(cc_cliente.getText())) {
            JOptionPane.showMessageDialog(master_admin, "¡Las contraseñas no concuerdan!", "Advertencia", 0);

        } else if (user_cliente.getText().equals("sota2017")) {
            JOptionPane.showMessageDialog(master_admin, "¡Ese usuario no esta disponible!", "Advertencia", 0);
        } else if (evaluarUsername()) {
            JOptionPane.showMessageDialog(master_admin, "¡Ese usuario no esta disponible!", "Advertencia", 0);
        } else if (evaluarCodigo()) {
            JOptionPane.showMessageDialog(master_admin, "¡Ese codigo no esta disponible!", "Advertencia", 0);
        } else if (evaluarID()) {
            JOptionPane.showMessageDialog(master_admin, "¡Esa identidad no esta disponible!", "Advertencia", 0);
        } else {
            String fijo, movil;
            if (fijo_cliente.getText().equals("")) {
                fijo = "N/A";
            } else {
                fijo = fijo_cliente.getText();
            }
            if (celular_cliente.getText().equals("")) {
                movil = "N/A";
            } else {
                movil = celular_cliente.getText();
            }
            //String codigo_cliente, String nombre, String identidad, String telefono_fijo,
            //String telefono_celular, String trabajo, String username, String password, String direccion
            try {
                String c = cod_cliente.getText();
                String n = nombre_cliente.getText();
                String id = id_cliente.getText();
                String t = trabajo_cliente.getText();
                String u = user_cliente.getText();
                String x = contra_cliente.getText();
                String p = crypt(crypt(x));
                String d = direccion_cliente.getText();
                db.conectar();
                db.query.execute("INSERT INTO clientes"
                        + " VALUES('" + c + "','" + n + "','" + id + "','" + fijo + "','" + movil + "','" + t + "','" + d + "','" + u + "','" + p + "')");
                db.commit();
                JOptionPane.showMessageDialog(master_admin, "¡Cliente agregado exitosamente!");
                cod_cliente.setText("");
                nombre_cliente.setText("");
                id_cliente.setText("");
                fijo_cliente.setText("");
                celular_cliente.setText("");
                trabajo_cliente.setText("");
                direccion_cliente.setText("");
                user_cliente.setText("");
                contra_cliente.setText("");
                cc_cliente.setText("");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(master_admin, "¡Ocurrio un error y no se agrego el Cliente!", "Error", 0);
                e.printStackTrace();
            }
            db.desconectar();
            cargarClientes();
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        boolean available = true;
        db.conectar();
        try {
            for (int i = 0; i < tiendas.size(); i++) {
                if (tiendas.get(i).getRtn().equals(rtn2.getText())) {
                    available = false;
                }
            }
            if (available) {
                String nnn = nombre12.getText();
                String ntr = rtn2.getText();
                db.query.execute("insert into TIENDAS (nombre,rtn) VALUES ('" + nnn + "','" + ntr + "')");
                db.commit();
                JOptionPane.showMessageDialog(master_admin, "Tienda creada exitosamente");
                nombre12.setText("");
                rtn2.setText("");
            } else {
                JOptionPane.showMessageDialog(master_admin, "Ese RTN no está disponible", "ERROR", 0);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        db.desconectar();
        cargarTiendas();

    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        if (distruibuidor.getSelectedIndex() != 0) {
            db.conectar();
            Tienda tempo = (Tienda) distruibuidor.getSelectedItem();
            try {
                String nr = tempo.getRtn();
                String nmp = nombreproducto.getText();
                String desco = descripcionproducto.getText();
                double price = Double.parseDouble(precioproducto.getText());
                db.query.execute("insert into productos (rtn,nombre,descripcion,precio) values ('" + nr + "','" + nmp + "','" + desco + "'," + price + ")");
                db.commit();
                JOptionPane.showMessageDialog(master_admin, "Producto creado exitosamente");
                distruibuidor.setSelectedIndex(0);
                nombreproducto.setText("");
                descripcionproducto.setText("");
                precioproducto.setText("0.00");

            } catch (Exception e) {
                e.printStackTrace();
            }
            db.desconectar();

        } else {
            JOptionPane.showMessageDialog(master_admin, "Por favor, seleccione un distribuidor", "ERROR", 0);
        }
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed

        try {
            server = new ServerSocket(puerto);
            socket = new Socket();
            socket = server.accept();//Creando la conexion, esperar a que se mande una peticion de otro programa
            entrada = new BufferedReader(new InputStreamReader(socket.getInputStream()));
            String mensaje = entrada.readLine();//Esta linea es la que guarda el mensaje
            //works.setText(mensaje);//Imprimir opcional
            salida = new DataOutputStream(socket.getOutputStream());//Este envia la info
            salida.writeUTF("Permission Granted");
            socket.close();
        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_jButton16ActionPerformed

    private void jButton23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton23ActionPerformed
        try {
            tp.setText("");
            cliente = new Socket("localhost", puerto2);
            entrada = new BufferedReader(new InputStreamReader(cliente.getInputStream()));
            teclado = new BufferedReader(new InputStreamReader(System.in));
            //String tec = teclado.readLine();
            salida1 = new PrintStream(cliente.getOutputStream());
            salida1.println("Conectado");
            recibido = entrada.readLine();
            recibido = recibido.replaceAll("\\D+", "");
            double parseo = (Double.parseDouble(recibido) / 100);
            tp.setText(parseo + "");
            entrada.close();
            salida1.close();
            teclado.close();
            cliente.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton23ActionPerformed

    private void jButton24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton24ActionPerformed
        JOptionPane.showMessageDialog(master_client, "Transaccion Cancelada");
        tp.setText("");
        descripcioncompra.setText("");
        cbtj.setSelectedIndex(0);
    }//GEN-LAST:event_jButton24ActionPerformed

    private void jButton22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton22ActionPerformed
        if (cbtj.getSelectedIndex() != 0) {
            Tarjeta jeta = (Tarjeta) cbtj.getSelectedItem();
            double apagar = Double.parseDouble(tp.getText());
            if (apagar <= jeta.getSaldo_disponible()) {
                if (descripcioncompra.getText().equals("")) {
                    JOptionPane.showMessageDialog(master_client, "Ingrese una descripcion de la compra", "ERROR", 0);
                } else {
                    String num = "";
                    for (EC e : ec) {
                        if (e.getNo_tarjeta().equals(jeta.getNumero())) {
                            num = e.getCodigo();
                        }
                    }
                    double saldo = jeta.getSaldo_disponible() - apagar;
                    db.conectar();
                    try {
                        db.query.execute("update tarjetas set sdisponible = " + saldo + " where numero = '" + jeta.getNumero() + "'");
                        db.query.execute("insert into detalle values ('" + num + "','" + descripcioncompra.getText() + "','" + formato.format(new Date()) + "'," + apagar + ")");
                        db.query.execute("update estados set contado = " + apagar + " where notarjeta = '" + jeta.getNumero() + "'");
                        db.query.execute("update estados set minimo = " + (apagar * 0.10) + " where notarjeta = '" + jeta.getNumero() + "'");
                        db.commit();
                        JOptionPane.showMessageDialog(master_client, "Compra realizada");
                        descripcioncompra.setText("");
                        tp.setText("");
                        cargarDetalle();
                        cargarEstados();
                    } catch (Exception e) {
                        e.printStackTrace();
                    }
                }
            } else {
                JOptionPane.showMessageDialog(master_client, "Esa tarjeta no dispone fondos suficiente", "ERROR", 0);
            }
        } else {
            JOptionPane.showMessageDialog(master_client, "Por fnavor, seleccione una de sus tarjetas", "ERROR", 0);
        }
    }//GEN-LAST:event_jButton22ActionPerformed

    private void ec1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ec1ItemStateChanged
        if (ec1.getSelectedIndex() != 0) {
            Cliente ente = (Cliente) ec1.getSelectedItem();
            DefaultComboBoxModel m = new DefaultComboBoxModel();
            tj1.setModel(m);
            m.addElement("<Tarjetas>");
            for (Tarjeta jeta : ente.getTarjetas()) {
                m.addElement(jeta);
            }
            tj1.setModel(m);
        }
    }//GEN-LAST:event_ec1ItemStateChanged

    private void tj1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_tj1ItemStateChanged
        if (tj1.getSelectedIndex() != 0) {
            Tarjeta jeta = (Tarjeta) tj1.getSelectedItem();
            notj.setText(jeta.getNumero());
        } else {
            notj.setText("");
        }
    }//GEN-LAST:event_tj1ItemStateChanged

    private void jButton25ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton25ActionPerformed
        boolean existe = false;
        if (ec1.getSelectedIndex() != 0 && tj1.getSelectedIndex() != 0) {
            for (EC e : ec) {
                if (e.getCodigo().equals(ecc.getText())) {
                    existe = true;
                }
            }
            if (existe) {
                JOptionPane.showMessageDialog(master_admin, "Ese codigo no esta disponible", "ERROR", 0);
            } else {
                db.conectar();
                try {
                    String c = ecc.getText();
                    String d = ecd.getText();
                    String m = (String) ecm.getSelectedItem();
                    String a = eca.getValue() + "";
                    double contado = 0.00;
                    double minimo = 0.00;
                    String max = formato.format(((Tarjeta) tj1.getSelectedItem()).getFecha_corte());
                    String realizado = "N/A";
                    String no = ((Tarjeta) tj1.getSelectedItem()).getNumero();
                    db.query.execute("insert into estados "
                            + "values ('" + c + "','" + d + "','" + m + "','" + a + "'," + contado + "," + minimo + ",'" + max + "','" + realizado + "','" + no + "')");
                    db.commit();
                    JOptionPane.showMessageDialog(master_admin, "Creada con exito");
                    ecc.setText("");
                    ecd.setText("");
                    ecm.setSelectedIndex(0);
                    ec1.setSelectedIndex(0);
                    tj1.setSelectedIndex(0);

                } catch (Exception e) {
                    e.printStackTrace();
                }
                db.desconectar();
            }
        } else {
            JOptionPane.showMessageDialog(master_admin, "Por favor, seleccion cliente/tarjeta", "ERROR", 0);
        }
    }//GEN-LAST:event_jButton25ActionPerformed

    private void cbtjItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbtjItemStateChanged
        if (cbtj.getSelectedIndex() != 0) {
            Tarjeta jeta = (Tarjeta) cbtj.getSelectedItem();
            sds.setText(jeta.getSaldo_disponible() + "");
        } else {
            sds.setText("0.00");
        }
    }//GEN-LAST:event_cbtjItemStateChanged

    private void tj2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_tj2ItemStateChanged
        /*if (tj2.getSelectedIndex() != 0) {
            nt1.setText(((Tarjeta) tj2.getSelectedItem()).getNumero());
        } else {
            nt1.setText("");
        }*/
    }//GEN-LAST:event_tj2ItemStateChanged

    private void jButton26ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton26ActionPerformed
        if (tj2.getSelectedIndex() != 0) {
            Tarjeta jeta = (Tarjeta) tj2.getSelectedItem();
            EC tempo = new EC();
            boolean existe = false;
            DefaultTableModel m = (DefaultTableModel) tablaestados.getModel();
            DefaultTableModel n = (DefaultTableModel) tabladetalles.getModel();
            while (m.getRowCount() != 0) {
                m.removeRow(0);
            }
            while (n.getRowCount() != 0) {
                n.removeRow(0);
            }
            for (EC ex : ec) {
                if (ex.getNo_tarjeta().equals(jeta.getNumero())) {
                    tempo = ex;
                    existe = true;
                    asdf = ex;
                }
            }
            if (existe) {
                Object[] fila = {tempo.getCodigo(), tempo.getDescripcion(), tempo.getMes(), tempo.getAño(), tempo.getPago_contado(), tempo.getPago_minimo(), formato.format(tempo.getFecha_maxima()), tempo.getFecha_pago_realizado()};
                m.addRow(fila);
                tablaestados.setModel(m);
                for (Detalle alle : detalle) {
                    if (alle.getCodigo().equals(tempo.getCodigo())) {
                        Object[] f = {alle.getFecha(), alle.getDescripcion(), alle.getMonto()};
                        n.addRow(f);
                    }
                }
                tabladetalles.setModel(n);
            } else {
                JOptionPane.showMessageDialog(master_client, "Ese estado de cuenta no esta disponible", "ERROR", 0);
            }
        } else {
            JOptionPane.showMessageDialog(master_client, "Por favor seleccione una tarjeta", "ERROR", 0);
        }
    }//GEN-LAST:event_jButton26ActionPerformed

    private void jButton27ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton27ActionPerformed
        String ruta = "";
        String detaail = "";
        JFileChooser dlg = new JFileChooser();
        int option = dlg.showSaveDialog(master_client);
        if (option == JFileChooser.APPROVE_OPTION) {
            File f = dlg.getSelectedFile();
            ruta = f.toString();
        }
        String header = "               SOTA ATLANTIDA - ESTADO DE CUENTA\n"
                + "\nCODIGO: " + asdf.getCodigo() + "   MES: " + asdf.getMes() + "  AÑO: " + asdf.getAño()
                + "\nDESCRIPCION: " + asdf.getDescripcion()
                + "\nPAGO CONTADO: Lps. " + asdf.getPago_contado() + "   PAGO MINIMO: Lps. " + (asdf.getPago_contado() * 0.10)
                + "\nFECHA MAXIMA: " + asdf.getFecha_maxima() + "   FECHA DE ULTIMO PAGO: " + asdf.getFecha_pago_realizado()
                + "\n-------------------------------------------------------------------------------\n";
        for (Detalle alle : detalle) {
            if (alle.getCodigo().equals(asdf.getCodigo())) {
                detaail += "FECHA: " + alle.getFecha() + "  MONTO: Lps." + alle.getMonto() + "\nDESCRIPCION: " + alle.getDescripcion() + "\n";
            }
        }
        String salida = header + detaail;
        try {
            FileOutputStream archive = new FileOutputStream(ruta + ".pdf");
            Document doc = new Document();
            PdfWriter.getInstance(doc, archive);
            doc.open();
            doc.add(new Paragraph(header));
            doc.add(new Paragraph(detaail));
            doc.close();
            JOptionPane.showMessageDialog(master_client, "PDF Creado");
        } catch (Exception e) {
            e.printStackTrace();
        }


    }//GEN-LAST:event_jButton27ActionPerformed

    private void jButton28ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton28ActionPerformed
        cargarClientes();
        for (Cliente ente : clientes) {
            if (ente.getCodigo_cliente().equals(logged.getCodigo_cliente())) {
                logged = ente;
            }
        }
    }//GEN-LAST:event_jButton28ActionPerformed

    private void cbtj98ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbtj98ItemStateChanged
        if (cbtj98.getSelectedIndex() > 0) {
            Tarjeta jeta = logged.getTarjetas().get(cbtj98.getSelectedIndex() - 1);
            EC est = new EC();
            for (EC c : ec) {
                if (c.getNo_tarjeta().equals(jeta.getNumero())) {
                    est = c;
                }
            }
            pminimo.setText(est.getPago_contado() * 0.10 + "");
            pcontado.setText(est.getPago_contado() + "");
        } else {
            pminimo.setText("0.00");
            pcontado.setText("0.00");
        }
    }//GEN-LAST:event_cbtj98ItemStateChanged

    private void jButton29ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton29ActionPerformed
        if (cbtj98.getSelectedIndex() > 0) {
            if (cbcnts.getSelectedIndex() > 0) {
                Tarjeta eta = (Tarjeta) cbtj98.getSelectedItem();
                Cuenta_Bancaria aria = (Cuenta_Bancaria) cbcnts.getSelectedItem();
                double pag = Double.parseDouble(pminimo.getText());
                if (aria.getSaldo() - pag >= 0) {
                    db.conectar();
                    try {
                        db.query.execute("update cuentas set saldo = " + (aria.getSaldo() - pag) + " where ncuenta = '" + aria.getNum_cuenta() + "'");
                        db.query.execute("update estados set contado = " + ((pag * 10) - pag) + " where notarjeta = '" + eta.getNumero() + "'");
                        db.query.execute("update estados set minimo = " + (((pag * 10) - pag) * 0.10) + " where notarjeta = '" + eta.getNumero() + "'");
                        db.query.execute("update estados set pagorealizado = '" + formato.format(new Date()) + "' where notarjeta = '" + eta.getNumero() + "'");
                        db.commit();
                        JOptionPane.showMessageDialog(master_client, "Pago exitoso");
                    } catch (Exception e) {
                        e.printStackTrace();
                    }
                    db.desconectar();
                } else {
                    JOptionPane.showMessageDialog(master_client, "Fondos insuficiente", "ERROR", 0);
                }
            } else {
                JOptionPane.showMessageDialog(master_client, "Seleccione una cuenta con la cual pagar", "ERROR", 0);
            }
        } else {
            JOptionPane.showMessageDialog(master_client, "Seleccione una tarjeta a pagar", "ERROR", 0);
        }
    }//GEN-LAST:event_jButton29ActionPerformed

    private void cbcntsItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbcntsItemStateChanged
        if (cbcnts.getSelectedIndex() > 0) {
            Cuenta_Bancaria aria = (Cuenta_Bancaria) cbcnts.getSelectedItem();
            xyz.setText(aria.getSaldo() + "");
        } else {
            xyz.setText("0.00");
        }
    }//GEN-LAST:event_cbcntsItemStateChanged

    private void jButton32ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton32ActionPerformed
        if (cbtj98.getSelectedIndex() > 0) {
            if (cbcnts.getSelectedIndex() > 0) {
                Tarjeta eta = (Tarjeta) cbtj98.getSelectedItem();
                Cuenta_Bancaria aria = (Cuenta_Bancaria) cbcnts.getSelectedItem();
                double pag = Double.parseDouble(pcontado.getText());
                if (aria.getSaldo() - pag >= 0) {
                    db.conectar();
                    try {
                        db.query.execute("update cuentas set saldo = " + (aria.getSaldo() - pag) + " where ncuenta = '" + aria.getNum_cuenta() + "'");
                        db.query.execute("update estados set contado = " + 0 + " where notarjeta = '" + eta.getNumero() + "'");
                        db.query.execute("update estados set minimo = " + 0 + " where notarjeta = '" + eta.getNumero() + "'");
                        db.query.execute("update estados set pagorealizado = '" + formato.format(new Date()) + "' where notarjeta = '" + eta.getNumero() + "'");
                        db.commit();
                        JOptionPane.showMessageDialog(master_client, "Pago exitoso");
                    } catch (Exception e) {
                        e.printStackTrace();
                    }
                    db.desconectar();
                } else {
                    JOptionPane.showMessageDialog(master_client, "Fondos insuficiente", "ERROR", 0);
                }
            } else {
                JOptionPane.showMessageDialog(master_client, "Seleccione una cuenta con la cual pagar", "ERROR", 0);
            }
        } else {
            JOptionPane.showMessageDialog(master_client, "Seleccione una tarjeta a pagar", "ERROR", 0);
        }
    }//GEN-LAST:event_jButton32ActionPerformed

    private void mnthsItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_mnthsItemStateChanged
        if (mnths.getSelectedIndex() >= 0) {
            if (mnths.getSelectedIndex() == 0) {
                Tarjeta jeta = (Tarjeta) tj2.getSelectedItem();
                EC tempo = new EC();
                boolean existe = false;
                DefaultTableModel m = (DefaultTableModel) tablaestados.getModel();
                DefaultTableModel n = (DefaultTableModel) tabladetalles.getModel();
                while (m.getRowCount() != 0) {
                    m.removeRow(0);
                }
                while (n.getRowCount() != 0) {
                    n.removeRow(0);
                }
                for (EC ex : ec) {
                    if (ex.getNo_tarjeta().equals(jeta.getNumero())) {
                        tempo = ex;
                        existe = true;
                        asdf = ex;
                    }
                }
                if (existe) {
                    Object[] fila = {tempo.getCodigo(), tempo.getDescripcion(), tempo.getMes(), tempo.getAño(), tempo.getPago_contado(), tempo.getPago_minimo(), formato.format(tempo.getFecha_maxima()), tempo.getFecha_pago_realizado()};
                    m.addRow(fila);
                    tablaestados.setModel(m);
                    for (Detalle alle : detalle) {
                        if (alle.getCodigo().equals(tempo.getCodigo())) {
                            Object[] f = {alle.getFecha(), alle.getDescripcion(), alle.getMonto()};
                            n.addRow(f);
                        }
                    }
                    tabladetalles.setModel(n);
                } else {
                    JOptionPane.showMessageDialog(master_client, "Ese estado de cuenta no esta disponible", "ERROR", 0);
                }
            } else {
                Tarjeta jeta = (Tarjeta) tj2.getSelectedItem();
                EC tempo = new EC();
                boolean existe = false;
                DefaultTableModel m = (DefaultTableModel) tablaestados.getModel();
                DefaultTableModel n = (DefaultTableModel) tabladetalles.getModel();
                while (m.getRowCount() != 0) {
                    m.removeRow(0);
                }
                while (n.getRowCount() != 0) {
                    n.removeRow(0);
                }
                for (EC ex : ec) {
                    if (ex.getNo_tarjeta().equals(jeta.getNumero())) {
                        if (ex.getMes().equals((String) mnths.getSelectedItem())) {
                            tempo = ex;
                            existe = true;
                            asdf = ex;
                        }

                    }
                }
                if (existe) {
                    Object[] fila = {tempo.getCodigo(), tempo.getDescripcion(), tempo.getMes(), tempo.getAño(), tempo.getPago_contado(), tempo.getPago_minimo(), formato.format(tempo.getFecha_maxima()), tempo.getFecha_pago_realizado()};
                    m.addRow(fila);
                    tablaestados.setModel(m);
                    for (Detalle alle : detalle) {
                        if (alle.getCodigo().equals(tempo.getCodigo())) {
                            Object[] f = {alle.getFecha(), alle.getDescripcion(), alle.getMonto()};
                            n.addRow(f);
                        }
                    }
                    tabladetalles.setModel(n);
                } else {
                    JOptionPane.showMessageDialog(master_client, "Ese estado de cuenta no esta disponible", "ERROR", 0);
                }
            }
        }
    }//GEN-LAST:event_mnthsItemStateChanged

    private void jButton30ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton30ActionPerformed
        if (tabla_clientes.getSelectedRow() != -1) {
            double sct = 0;
            double st = 0;
            double tc = 0;
            Cliente ente = clientes.get(tabla_clientes.getSelectedRow());
            DefaultTableModel m = (DefaultTableModel) dcliente.getModel();
            while (m.getRowCount() != 0) {
                m.removeRow(0);
            }
            Object[] f1 = {ente.getCodigo_cliente(), ente.getNombre(), ente.getIdentidad(), ente.getTelefono_fijo(), ente.getTelefono_celular(), ente.getTrabajo(), ente.getDireccion()};
            m.addRow(f1);
            dcliente.setModel(m);
            m = (DefaultTableModel) ccliente.getModel();
            while (m.getRowCount() != 0) {
                m.removeRow(0);
            }
            for (Cuenta_Bancaria aria : ente.getCuentas()) {
                Object[] f2 = {aria.getNum_cuenta(), aria.getDescripcion(), aria.getSaldo()};
                m.addRow(f2);
                sct += aria.getSaldo();
            }
            ccliente.setModel(m);
            m = (DefaultTableModel) tablatj123.getModel();
            while (m.getRowCount() != 0) {
                m.removeRow(0);
            }
            for (Tarjeta jeta : ente.getTarjetas()) {
                Object[] f3 = {jeta.getDescripcion(), jeta.getSaldo_disponible()};
                m.addRow(f3);
                st += jeta.getSaldo_disponible();
            }
            tablatj123.setModel(m);
            m = (DefaultTableModel) tablacompras.getModel();
            while (m.getRowCount() != 0) {
                m.removeRow(0);
            }
            for (Tarjeta jeta : ente.getTarjetas()) {
                for (EC e : ec) {
                    if (jeta.getNumero().equals(e.getNo_tarjeta())) {
                        for (Detalle alle : detalle) {
                            if(alle.getCodigo().equals(e.getCodigo())){
                            Object[] f4 = {alle.getFecha(), alle.getDescripcion(), alle.getMonto()};
                            m.addRow(f4);
                            tc += alle.getMonto();
                            }
                        }
                    }
                }
            }
            tablacompras.setModel(m);
            t11.setText(sct + "");
            t12.setText(st + "");
            t13.setText(tc + "");
            //Reporte.setModal(true);
            Reporte.pack();
            Reporte.setLocationRelativeTo(master_admin);
            Reporte.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(master_admin, "Elija una fila valida", "ERROR", 0);
        }
    }//GEN-LAST:event_jButton30ActionPerformed

    private void jButton31ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton31ActionPerformed
        DefaultCategoryDataset dcds = new DefaultCategoryDataset();
        dcds.setValue(Double.parseDouble(t11.getText()), "Saldo en Cuentas", "A la fecha");
        dcds.setValue(Double.parseDouble(t12.getText()), "Saldo en Tarjetas", "A la fecha");
        dcds.setValue(Double.parseDouble(t13.getText()), "Invertido en Compras", "A la fecha");

        JFreeChart jfcl = ChartFactory.createBarChart3D("Reporte de Cliente",
                "Fecha", "Efectivo", dcds, PlotOrientation.VERTICAL, true, true, true);
        CategoryPlot plot = jfcl.getCategoryPlot();
        plot.setBackgroundPaint(Color.lightGray);
        plot.setDomainGridlinePaint(Color.white);
        plot.setRangeGridlinePaint(Color.white);

        BarRenderer renderer = (BarRenderer) plot.getRenderer();
        renderer.setSeriesPaint(0, Color.pink);
        renderer.setSeriesPaint(1, Color.green);
        renderer.setSeriesPaint(2, Color.CYAN);

        ChartFrame frame2 = new ChartFrame("Gráfico", jfcl);
        frame2.pack();
        frame2.setLocationRelativeTo(Reporte);
        frame2.setVisible(true);
    }//GEN-LAST:event_jButton31ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Metal".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Sucursal_Bancaria.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Sucursal_Bancaria.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Sucursal_Bancaria.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Sucursal_Bancaria.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Sucursal_Bancaria().setVisible(true);
            }
        });
    }

    public void actualizarGralCuentas() {
        DefaultTableModel m = (DefaultTableModel) tablagralcuentas.getModel();
        while (m.getRowCount() != 0) {
            m.removeRow(0);
        }
        for (int i = 0; i < cuentas.size(); i++) {
            Cuenta_Bancaria b = cuentas.get(i);
            String n = "";
            for (int j = 0; j < clientes.size(); j++) {
                if (b.getCod_cliente().equals(clientes.get(j).getCodigo_cliente())) {
                    n = clientes.get(j).getNombre();
                }
            }
            Object[] fila = {b.getNum_cuenta(), n, b.getCod_cliente(), b.getDescripcion(), b.getSaldo(), formato.format(b.getFecha_creacion())};
            m.addRow(fila);
        }
        tablagralcuentas.setModel(m);
    }

    public boolean evaluarUsername() {
        boolean devolver = false;
        for (int i = 0; i < clientes.size(); i++) {
            Cliente tempo = clientes.get(i);
            if (tempo.getUsername().equals(user_cliente.getText())) {
                devolver = true;
            }
        }
        return devolver;
    }

    public boolean evaluarCodigo() {
        boolean devolver = false;
        for (int i = 0; i < clientes.size(); i++) {
            Cliente tempo = clientes.get(i);
            if (tempo.getCodigo_cliente().equals(cod_cliente.getText())) {
                devolver = true;
            }
        }
        return devolver;
    }

    public boolean evaluarID() {
        boolean devolver = false;
        for (int i = 0; i < clientes.size(); i++) {
            Cliente tempo = clientes.get(i);
            if (tempo.getIdentidad().equals(id_cliente.getText())) {
                devolver = true;
            }
        }
        return devolver;
    }

    public void actualizarCombo() {
        DefaultComboBoxModel cm = new DefaultComboBoxModel();
        cb_cuentas_clientes.setModel(cm);
        cb_cuentas_clientes1.setModel(cm);
        ec1.setModel(cm);
        cm.addElement("<Clientes>");
        for (int i = 0; i < clientes.size(); i++) {
            cm.addElement(clientes.get(i));
        }
        cb_cuentas_clientes.setModel(cm);
        cb_cuentas_clientes1.setModel(cm);
        ec1.setModel(cm);
    }

    public void actualizarTipos() {
        DefaultTableModel m = (DefaultTableModel) tabla_tipotarjeta.getModel();
        while (m.getRowCount() != 0) {
            m.removeRow(0);
        }
        for (Tipo_Tarjeta t : tipos) {
            Object[] fila = {t.getCodigo(), t.getDescripcion(), t.getLimite_maximo()};
            m.addRow(fila);
        }
        tabla_tipotarjeta.setModel(m);
    }

    public void actualizarComboTipos() {
        DefaultComboBoxModel cm = new DefaultComboBoxModel();
        cb_tt.setModel(cm);
        cm.addElement("<Tipos>");
        for (int i = 0; i < tipos.size(); i++) {
            cm.addElement(tipos.get(i));
        }
        cb_tt.setModel(cm);

    }

    public void actualizarTJ1() {
        if (ec1.getSelectedIndex() != 0) {
            Cliente ente = (Cliente) ec1.getSelectedItem();
            DefaultComboBoxModel cm = (DefaultComboBoxModel) tj1.getModel();
            cm.removeAllElements();
            cm.addElement("<Tarjetas>");
            for (Tarjeta jeta : ente.getTarjetas()) {
                cm.addElement(jeta);
            }
            tj1.setModel(cm);
        }
    }

    public void cargarClientes() {
        cargarCuentas();
        cargarTipos();
        cargarTarjetas();
        cargarTiendas();
        cargarEstados();
        cargarDetalle();
        db.conectar();
        try {
            clientes = new ArrayList();
            db.query.execute("select *from clientes");
            ResultSet rs = db.query.getResultSet();
            while (rs.next()) {
                String c = rs.getString(1);
                String n = rs.getString(2);
                String i = rs.getString(3);
                String f = rs.getString(4);
                String m = rs.getString(5);
                String t = rs.getString(6);
                String d = rs.getString(7);
                String u = rs.getString(8);
                String p = rs.getString(9);
                Cliente tempo = new Cliente(c, n, i, f, m, t, u, p, d);
                clientes.add(tempo);
            }
            for (int i = 0; i < clientes.size(); i++) {
                for (int j = 0; j < cuentas.size(); j++) {
                    if (clientes.get(i).getCodigo_cliente().equals(cuentas.get(j).getCod_cliente())) {
                        clientes.get(i).getCuentas().add(cuentas.get(j));
                    }
                }
            }
            for (int i = 0; i < clientes.size(); i++) {
                for (int j = 0; j < tarjetas.size(); j++) {
                    if (clientes.get(i).getCodigo_cliente().equals(tarjetas.get(j).getCodigo_cliente())) {
                        clientes.get(i).getTarjetas().add(tarjetas.get(j));
                    }
                }
            }
            //System.out.println("ELEMENTOS CARGADOS EXITOSAMENTE");
        } catch (Exception e) {
            e.printStackTrace();
        }
        db.desconectar();
    }

    public void cargarCuentas() {
        Date d;
        Calendar cal = Calendar.getInstance();
        ArrayList<Integer> fecha = new ArrayList();
        db.conectar();
        try {
            cuentas = new ArrayList();
            db.query.execute("select *from cuentas");
            ResultSet rs = db.query.getResultSet();
            while (rs.next()) {
                String nc = rs.getString(1);
                String des = rs.getString(2);
                double s = rs.getDouble(3);
                String f = rs.getString(4);
                String cc = rs.getString(5);
                Scanner sc = new Scanner(f);
                sc.useDelimiter("/");
                while (sc.hasNext()) {
                    fecha.add(sc.nextInt());
                }
                sc.close();
                cal.set(Calendar.YEAR, fecha.get(2));
                cal.set(Calendar.MONTH, (fecha.get(1) - 1));
                cal.set(Calendar.DAY_OF_MONTH, fecha.get(0));
                d = cal.getTime();
                Cuenta_Bancaria tempo = new Cuenta_Bancaria(nc, des, s, d, cc);
                cuentas.add(tempo);
                fecha = new ArrayList();
            }
            //System.out.println("CUENTAS CARGADAS CON EXITO");
        } catch (Exception e) {
            e.printStackTrace();
        }
        db.desconectar();
    }

    public void cargarTipos() {
        db.conectar();
        try {
            tipos = new ArrayList();
            db.query.execute("select *from tipos");
            ResultSet rs = db.query.getResultSet();
            while (rs.next()) {
                ArrayList<String> temp = new ArrayList();
                String cod = rs.getString(1);
                String des = rs.getString(2);
                double lim = rs.getDouble(3);
                String b = rs.getString(4);
                tipos.add(new Tipo_Tarjeta(cod, des, lim));
                if (b != null) {
                    Scanner sc = new Scanner(b);
                    sc.useDelimiter(",");
                    while (sc.hasNext()) {
                        temp.add(sc.next());
                    }
                    tipos.get(tipos.size() - 1).setBeneficios(temp);
                    ///System.out.println("TIPOS CARGADOS CON EXITO");
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        db.desconectar();
    }

    public void cargarTarjetas() {
        db.conectar();
        Date d, d1;
        Calendar cal = Calendar.getInstance();
        ArrayList<Integer> fecha = new ArrayList();
        try {
            tarjetas = new ArrayList();
            db.query.execute("select *from tarjetas");
            ResultSet rs = db.query.getResultSet();
            while (rs.next()) {
                String num = rs.getString(1);
                String nom = rs.getString(2);
                String des = rs.getString(3);
                double lim = rs.getDouble(4);
                double act = rs.getDouble(5);
                double dis = rs.getDouble(6);
                String pin = rs.getString(7);
                double tas = rs.getDouble(8);
                String cor = rs.getString(9);
                String emi = rs.getString(10);
                String cc = rs.getString(11);
                String type = rs.getString(12);
                Tipo_Tarjeta tempo = null;
                for (int i = 0; i < tipos.size(); i++) {
                    if (tipos.get(i).getCodigo().equals(type)) {
                        tempo = tipos.get(i);
                    }
                }
                Scanner sc = new Scanner(cor);
                sc.useDelimiter("/");
                while (sc.hasNext()) {
                    fecha.add(sc.nextInt());
                }
                sc.close();
                cal.set(Calendar.YEAR, fecha.get(2));
                cal.set(Calendar.MONTH, (fecha.get(1) - 1));
                cal.set(Calendar.DAY_OF_MONTH, fecha.get(0));
                d = cal.getTime();
                fecha = new ArrayList();
                sc = new Scanner(emi);
                sc.useDelimiter("/");
                while (sc.hasNext()) {
                    fecha.add(sc.nextInt());
                }
                sc.close();
                cal.set(Calendar.YEAR, fecha.get(2));
                cal.set(Calendar.MONTH, (fecha.get(1) - 1));
                cal.set(Calendar.DAY_OF_MONTH, fecha.get(0));
                d1 = cal.getTime();
                fecha = new ArrayList();
                Tarjeta t = new Tarjeta(num, nom, des, lim, act, dis, pin, tas, d, d1, cc, tempo);
                tarjetas.add(t);
            }
            db.desconectar();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public String crypt(String original) {
        String a = "abcdefghijklmnopqrstuvwxyz";
        String b = "cipherstuvwxyzabdfgjklmnoq";
        String devolver = "", tempo = "", tempo1 = "";
        boolean otro = true;
        for (int i = 0; i < original.length(); i++) {
            otro = true;
            tempo = original.charAt(i) + "";
            for (int j = 0; j < a.length(); j++) {
                tempo1 = a.charAt(j) + "";
                if (tempo.equalsIgnoreCase(tempo1)) {
                    otro = false;
                    devolver += b.charAt(j) + "";
                }
            }
            if (otro) {
                devolver += original.charAt(i);
            }
        }
        return devolver;
    }

    public void rcb() {
        cargarClientes();
        for (Cliente client : clientes) {
            if (client.getCodigo_cliente().equals(logged.getCodigo_cliente())) {
                logged = client;
            }
        }
        cb1.setModel(new DefaultComboBoxModel());
        cb2.setModel(new DefaultComboBoxModel());
        cb3.setModel(new DefaultComboBoxModel());
        DefaultComboBoxModel m = (DefaultComboBoxModel) cb1.getModel();
        DefaultComboBoxModel n = (DefaultComboBoxModel) cb2.getModel();
        DefaultComboBoxModel o = (DefaultComboBoxModel) cb3.getModel();
        m.addElement("<Cuentas>");
        n.addElement("<Cuentas>");
        o.addElement("<Cuentas>");
        for (int i = 0; i < logged.getCuentas().size(); i++) {
            m.addElement(logged.getCuentas().get(i));
            n.addElement(logged.getCuentas().get(i));
            o.addElement(logged.getCuentas().get(i));
        }
        cb1.setModel(m);
        cb2.setModel(n);
        cb3.setModel(o);
    }

    public void cargarTiendas() {
        tiendas = new ArrayList();
        db.conectar();
        try {
            db.query.execute("select *from tiendas");
            ResultSet rs = db.query.getResultSet();
            while (rs.next()) {
                String nombre = rs.getString("NOMBRE");
                String rtn = rs.getString("RTN");
                Tienda troll = new Tienda(rtn, nombre);
                tiendas.add(troll);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
        db.desconectar();
        DefaultComboBoxModel m = (DefaultComboBoxModel) distruibuidor.getModel();
        m.removeAllElements();
        m.addElement("<Tienda>");
        for (Tienda copan : tiendas) {
            m.addElement(copan);
        }
        distruibuidor.setModel(m);
        cargarProductos();
    }

    public void cargarProductos() {
        productos = new ArrayList();
        db.conectar();
        try {
            db.query.execute("select *from productos");
            ResultSet rs = db.query.getResultSet();
            while (rs.next()) {
                String nombre = rs.getString("NOMBRE");
                String rtn = rs.getString("RTN");
                String desc = rs.getString("DESCRIPCION");
                double price = rs.getDouble("PRECIO");
                Productos troll = new Productos(rtn, nombre, desc, price);
                productos.add(troll);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
        db.desconectar();
        for (Tienda tienda : tiendas) {
            for (Productos p : productos) {
                if (p.getRtn().equals(tienda.getRtn())) {
                    tienda.getProductos().add(p);
                }
            }
        }
    }

    public void cargarEstados() {
        ec = new ArrayList();
        db.conectar();
        ArrayList<Integer> fecha = new ArrayList();
        Calendar cal = Calendar.getInstance();
        try {
            db.query.execute("select *from estados");
            ResultSet rs = db.query.getResultSet();
            while (rs.next()) {
                String codigo = rs.getString("CODIGO");
                String descripcion = rs.getString("DESCRIPCION");
                String mes = rs.getString("MES");
                String anio = rs.getString("ANIO");
                double contado = rs.getDouble("CONTADO");
                double minimo = rs.getDouble("MINIMO");
                String maxima = rs.getString("FECHAMAXIMA");
                Scanner sc = new Scanner(maxima);
                sc.useDelimiter("/");
                while (sc.hasNext()) {
                    fecha.add(sc.nextInt());
                }
                sc.close();
                cal.set(Calendar.YEAR, fecha.get(2));
                cal.set(Calendar.MONTH, (fecha.get(1) - 1));
                cal.set(Calendar.DAY_OF_MONTH, fecha.get(0));
                Date d = cal.getTime();
                String pago = rs.getString("PAGOREALIZADO");
                String no = rs.getString("NOTARJETA");
                EC enta = new EC(codigo, descripcion, mes, anio, contado, minimo, d, pago, no);
                ec.add(enta);

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        db.desconectar();
    }

    public void cargarDetalle() {
        detalle = new ArrayList();
        db.conectar();
        try {
            db.query.execute("select *from detalle");
            ResultSet rs = db.query.getResultSet();
            while (rs.next()) {
                String no = rs.getString("CODIGO");
                String descripcion = rs.getString("DESCRIPCION");
                String fec = rs.getString("FECHA");
                double monto = rs.getDouble("MONTO");
                Detalle alle = new Detalle(no, descripcion, fec, monto);
                detalle.add(alle);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        db.desconectar();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog Reporte;
    private javax.swing.JButton bt_agregarcuenta;
    private javax.swing.JButton bt_agregarcuenta1;
    private javax.swing.JButton bt_agregarcuenta2;
    private javax.swing.JButton bt_eliminarcuenta;
    private javax.swing.JButton bt_eliminarcuenta1;
    private javax.swing.JButton bt_eliminarcuenta2;
    private javax.swing.JComboBox<String> cb1;
    private javax.swing.JComboBox<String> cb2;
    private javax.swing.JComboBox<String> cb3;
    private javax.swing.JComboBox<String> cb_cuentas_clientes;
    private javax.swing.JComboBox<String> cb_cuentas_clientes1;
    private javax.swing.JComboBox<String> cb_tt;
    private javax.swing.JComboBox<String> cbcnts;
    private javax.swing.JComboBox<String> cbtj;
    private javax.swing.JComboBox<String> cbtj98;
    private javax.swing.JPasswordField cc_cliente;
    private javax.swing.JTable ccliente;
    private javax.swing.JTextField celular_cliente;
    private javax.swing.JTextField cod_cliente;
    private javax.swing.JTextField codigo_tipotarjeta;
    private javax.swing.JTextField codseguridad_tarjeta;
    private javax.swing.JPanel consultas;
    private javax.swing.JTextField contador_beneficiostarjeta;
    private javax.swing.JPasswordField contra_cliente;
    private javax.swing.JTextField dc1;
    private javax.swing.JTextField dc2;
    private javax.swing.JTextField dc3;
    private javax.swing.JTable dcliente;
    private javax.swing.JButton depo;
    private javax.swing.JTextField depositoinicial_cuentabancaria;
    private javax.swing.JTextField descripcion_cuentabancaria;
    private javax.swing.JTextField descripcion_tarjeta;
    private javax.swing.JTextField descripcion_tipotarjeta;
    private javax.swing.JTextArea descripcioncompra;
    private javax.swing.JTextField descripcionproducto;
    private javax.swing.JTextField destinatario;
    private javax.swing.JLabel dia;
    private javax.swing.JTextField direccion_cliente;
    private javax.swing.JComboBox<String> distruibuidor;
    private javax.swing.JTextField dp1;
    private javax.swing.JTextField dp2;
    private javax.swing.JComboBox<String> ec1;
    private javax.swing.JSpinner eca;
    private javax.swing.JTextField ecc;
    private javax.swing.JTextField ecd;
    private javax.swing.JComboBox<String> ecm;
    private javax.swing.JPanel estados;
    private com.toedter.calendar.JDateChooser fechacorte;
    private javax.swing.JTextField fijo_cliente;
    private javax.swing.JPanel hacercompra;
    private javax.swing.JPanel hacerdeposito;
    private javax.swing.JPanel home;
    private javax.swing.JLabel homecoming;
    private javax.swing.JLabel hora;
    private javax.swing.JTextField id_cliente;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton22;
    private javax.swing.JButton jButton23;
    private javax.swing.JButton jButton24;
    private javax.swing.JButton jButton25;
    private javax.swing.JButton jButton26;
    private javax.swing.JButton jButton27;
    private javax.swing.JButton jButton28;
    private javax.swing.JButton jButton29;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton30;
    private javax.swing.JButton jButton31;
    private javax.swing.JButton jButton32;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel74;
    private javax.swing.JLabel jLabel75;
    private javax.swing.JLabel jLabel76;
    private javax.swing.JLabel jLabel77;
    private javax.swing.JLabel jLabel78;
    private javax.swing.JLabel jLabel79;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel80;
    private javax.swing.JLabel jLabel81;
    private javax.swing.JLabel jLabel82;
    private javax.swing.JLabel jLabel83;
    private javax.swing.JLabel jLabel84;
    private javax.swing.JLabel jLabel85;
    private javax.swing.JLabel jLabel86;
    private javax.swing.JLabel jLabel87;
    private javax.swing.JLabel jLabel88;
    private javax.swing.JLabel jLabel89;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel90;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel28;
    private javax.swing.JPanel jPanel29;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JScrollPane jScrollPane16;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField limite_tarjeta;
    private javax.swing.JTextField limite_tipotarjeta;
    private javax.swing.JLabel logo_portada;
    private javax.swing.JDialog master_admin;
    private javax.swing.JDialog master_client;
    private javax.swing.JComboBox<String> mnths;
    private javax.swing.JTextField no_tarjeta;
    private javax.swing.JLabel nombre1;
    private javax.swing.JTextField nombre12;
    private javax.swing.JTextField nombre_cliente;
    private javax.swing.JTextField nombreproducto;
    private javax.swing.JTextField notj;
    private javax.swing.JDialog nueva_cuenta;
    private javax.swing.JDialog nueva_tarjeta;
    private javax.swing.JDialog nuevo_tipo;
    private javax.swing.JTextField num_cuentabancaria;
    private javax.swing.JPanel pagartarjeta;
    private javax.swing.JPanel panelprincipal;
    private javax.swing.JTextField pcontado;
    private javax.swing.JPasswordField pf_pass2;
    private javax.swing.JTextField pminimo;
    private javax.swing.JTextField precioproducto;
    private javax.swing.JButton reti;
    private javax.swing.JTextField rtn2;
    private javax.swing.JTextField sa1;
    private javax.swing.JTextField sa2;
    private javax.swing.JTextField sa3;
    private javax.swing.JTextField saldo_tarjeta;
    private javax.swing.JTable saldocb;
    private javax.swing.JTable saldotj;
    private javax.swing.JTextField sds;
    private javax.swing.JTextField t11;
    private javax.swing.JTextField t12;
    private javax.swing.JTextField t13;
    private javax.swing.JTable tabla_beneficios;
    private javax.swing.JTable tabla_clientes;
    private javax.swing.JTable tabla_cuentasclientes;
    private javax.swing.JTable tabla_tarjetas;
    private javax.swing.JTable tabla_tipotarjeta;
    private javax.swing.JTable tabla_tt2;
    private javax.swing.JTable tablacompras;
    private javax.swing.JTable tabladetalles;
    private javax.swing.JTable tablaestados;
    private javax.swing.JTable tablagralcuentas;
    private javax.swing.JTable tablatj123;
    private javax.swing.JTextField tasa_tarjeta;
    private javax.swing.JTextField tf_cc1;
    private javax.swing.JTextField tf_cc2;
    private javax.swing.JTextField tf_user2;
    private javax.swing.JComboBox<String> tj1;
    private javax.swing.JComboBox<String> tj2;
    private javax.swing.JTextField tp;
    private javax.swing.JTextField trabajo_cliente;
    private javax.swing.JTextField user_cliente;
    private javax.swing.JTextField xyz;
    // End of variables declaration//GEN-END:variables
    private DateFormat formato = new SimpleDateFormat("dd/MM/yy");
    private DB db = new DB();
    private ArrayList<String> beneficios = new ArrayList();
    private ArrayList<Cliente> clientes = new ArrayList();
    private ArrayList<Cuenta_Bancaria> cuentas = new ArrayList();
    private ArrayList<Tipo_Tarjeta> tipos = new ArrayList();
    private ArrayList<Tarjeta> tarjetas = new ArrayList();
    private ArrayList<Tienda> tiendas = new ArrayList();
    private ArrayList<Productos> productos = new ArrayList();
    private ArrayList<Detalle> detalle = new ArrayList();
    private ArrayList<EC> ec = new ArrayList();
    private Cliente logged;
    private Socket cliente;
    ServerSocket server;
    Socket socket;
    private final int puerto = 500;//puerto que abriremos en la maquina
    private final int puerto2 = 600;
    DataOutputStream salida;//envia la informacion (datos)
    BufferedReader entrada, teclado;//recibe la informacion (lo guarda)
    private PrintStream salida1;
    String recibido;
    EC asdf;
}
